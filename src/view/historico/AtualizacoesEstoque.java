/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.historico;

import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Fornecedor;
import util.SQL_URL;
import view.Sistema_UI;

/**
 *
 * @author KLEYN
 */
public class AtualizacoesEstoque extends javax.swing.JFrame {
    
    private Sistema_UI sistemaUI = null;

    /**
     * Creates new form AtualizacoesEstoque
     * @param sistemaUI
     */
    public AtualizacoesEstoque(Sistema_UI sistemaUI) {
        this.sistemaUI = sistemaUI;
        initComponents();
        this.setVisible(true);
        this.sistemaUI.setEnabled(false);
        this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);
        this.toFront();
        atualizacaoBuscarTodos();
        atualizacaoDBuscarTodos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaAtualizacoes = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        campoBusca = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        radio_ProdutoA = new javax.swing.JRadioButton();
        radio_Fornecedor = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        btnFechar = new javax.swing.JButton();
        btnRelatorio = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaDiminuicoes = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        campoBuscaD = new javax.swing.JTextField();
        btnBuscarD = new javax.swing.JButton();
        radio_Produto = new javax.swing.JRadioButton();
        radio_Descricao = new javax.swing.JRadioButton();
        jPanel13 = new javax.swing.JPanel();
        btnFecharD = new javax.swing.JButton();
        btnRelatorioD = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        tabelaAtualizacoes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Produto", "Fornecedor", "Quantidade Reposta", "Preço Compra", "Margem Lucro (%)", "Preço de Venda", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaAtualizacoes.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tabelaAtualizacoes.getTableHeader().setReorderingAllowed(false);
        tabelaAtualizacoes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaAtualizacoesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaAtualizacoes);
        if (tabelaAtualizacoes.getColumnModel().getColumnCount() > 0) {
            tabelaAtualizacoes.getColumnModel().getColumn(1).setPreferredWidth(200);
            tabelaAtualizacoes.getColumnModel().getColumn(2).setPreferredWidth(200);
            tabelaAtualizacoes.getColumnModel().getColumn(3).setPreferredWidth(120);
            tabelaAtualizacoes.getColumnModel().getColumn(4).setPreferredWidth(120);
            tabelaAtualizacoes.getColumnModel().getColumn(5).setPreferredWidth(120);
            tabelaAtualizacoes.getColumnModel().getColumn(6).setPreferredWidth(120);
            tabelaAtualizacoes.getColumnModel().getColumn(7).setPreferredWidth(100);
        }

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/logoR.png"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel17)
                .addGap(0, 43, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(242, 242, 242));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.gray, java.awt.Color.gray, java.awt.Color.gray, java.awt.Color.gray));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("BUSCAR POR");

        campoBusca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                campoBuscaKeyPressed(evt);
            }
        });

        btnBuscar.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnBuscar.setText("BUSCAR");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        btnBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnBuscarKeyPressed(evt);
            }
        });

        buttonGroup2.add(radio_ProdutoA);
        radio_ProdutoA.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        radio_ProdutoA.setText("Produto");
        radio_ProdutoA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_ProdutoAActionPerformed(evt);
            }
        });

        buttonGroup2.add(radio_Fornecedor);
        radio_Fornecedor.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        radio_Fornecedor.setText("Fornecedor");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator6)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campoBusca)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(radio_ProdutoA)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(radio_Fornecedor)))
                .addGap(41, 41, 41))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(134, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(campoBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radio_ProdutoA)
                    .addComponent(radio_Fornecedor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(btnBuscar)
                .addContainerGap())
        );

        btnFechar.setBackground(new java.awt.Color(145, 0, 0));
        btnFechar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnFechar.setForeground(new java.awt.Color(255, 255, 255));
        btnFechar.setText("FECHAR");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        btnRelatorio.setBackground(new java.awt.Color(0, 153, 153));
        btnRelatorio.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnRelatorio.setForeground(new java.awt.Color(255, 255, 255));
        btnRelatorio.setText("GERAR RELATÓRIO TXT");
        btnRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRelatorioActionPerformed(evt);
            }
        });
        btnRelatorio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnRelatorioKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRelatorio, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                    .addComponent(btnFechar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(880, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Aumento do Estoque", jPanel7);

        tabelaDiminuicoes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Produto", "Descrição", "Quantidade Retirada", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaDiminuicoes.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tabelaDiminuicoes.getTableHeader().setReorderingAllowed(false);
        tabelaDiminuicoes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaDiminuicoesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaDiminuicoes);
        if (tabelaDiminuicoes.getColumnModel().getColumnCount() > 0) {
            tabelaDiminuicoes.getColumnModel().getColumn(1).setPreferredWidth(200);
            tabelaDiminuicoes.getColumnModel().getColumn(2).setPreferredWidth(250);
            tabelaDiminuicoes.getColumnModel().getColumn(3).setPreferredWidth(120);
            tabelaDiminuicoes.getColumnModel().getColumn(4).setPreferredWidth(100);
        }

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/logoR.png"))); // NOI18N

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel18)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jPanel12.setBackground(new java.awt.Color(242, 242, 242));
        jPanel12.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.gray, java.awt.Color.gray, java.awt.Color.gray, java.awt.Color.gray));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("BUSCAR POR");

        campoBuscaD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                campoBuscaDKeyPressed(evt);
            }
        });

        btnBuscarD.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnBuscarD.setText("BUSCAR");
        btnBuscarD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarDActionPerformed(evt);
            }
        });
        btnBuscarD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnBuscarDKeyPressed(evt);
            }
        });

        buttonGroup1.add(radio_Produto);
        radio_Produto.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        radio_Produto.setText("Produto");
        radio_Produto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_ProdutoActionPerformed(evt);
            }
        });

        buttonGroup1.add(radio_Descricao);
        radio_Descricao.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        radio_Descricao.setText("Descrição");
        radio_Descricao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_DescricaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator7)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campoBuscaD)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(radio_Produto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(radio_Descricao)))
                .addGap(41, 41, 41))
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(btnBuscarD, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(135, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(campoBuscaD, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radio_Produto)
                    .addComponent(radio_Descricao, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(btnBuscarD)
                .addContainerGap())
        );

        btnFecharD.setBackground(new java.awt.Color(145, 0, 0));
        btnFecharD.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnFecharD.setForeground(new java.awt.Color(255, 255, 255));
        btnFecharD.setText("FECHAR");
        btnFecharD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharDActionPerformed(evt);
            }
        });
        btnFecharD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnFecharDKeyPressed(evt);
            }
        });

        btnRelatorioD.setBackground(new java.awt.Color(0, 153, 153));
        btnRelatorioD.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnRelatorioD.setForeground(new java.awt.Color(255, 255, 255));
        btnRelatorioD.setText("GERAR RELATÓRIO TXT");
        btnRelatorioD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRelatorioDActionPerformed(evt);
            }
        });
        btnRelatorioD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnRelatorioDKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRelatorioD, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                    .addComponent(btnFecharD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnRelatorioD, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnFecharD, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(890, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Diminuição do Estoque", jPanel8);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel1.setText("Atualizações do Estoque");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1649, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(705, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void campoBuscaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoBuscaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            atualizacaoBuscar();
        }
    }//GEN-LAST:event_campoBuscaKeyPressed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        atualizacaoBuscar();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnBuscarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            atualizacaoBuscar();
        }
    }//GEN-LAST:event_btnBuscarKeyPressed

    private void radio_ProdutoAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_ProdutoAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radio_ProdutoAActionPerformed

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        this.dispose();
        sistemaUI.setEnabled(true);
        sistemaUI.toFront();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void btnRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRelatorioActionPerformed
        try {
            geraTxt();
        } catch (IOException ex) {
            Logger.getLogger(AtualizacoesEstoque.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRelatorioActionPerformed

    private void tabelaAtualizacoesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaAtualizacoesMouseClicked
        
    }//GEN-LAST:event_tabelaAtualizacoesMouseClicked

    private void tabelaDiminuicoesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaDiminuicoesMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaDiminuicoesMouseClicked

    private void campoBuscaDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoBuscaDKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            atualizacaoBuscarD();
        }
    }//GEN-LAST:event_campoBuscaDKeyPressed

    private void btnBuscarDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarDActionPerformed
        atualizacaoBuscarD();
    }//GEN-LAST:event_btnBuscarDActionPerformed

    private void btnBuscarDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnBuscarDKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            atualizacaoBuscarD();
        }
    }//GEN-LAST:event_btnBuscarDKeyPressed

    private void radio_ProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_ProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radio_ProdutoActionPerformed

    private void btnFecharDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharDActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnFecharDActionPerformed

    private void btnRelatorioDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRelatorioDActionPerformed
        try {
            geraTxtD();
        } catch (IOException ex) {
            Logger.getLogger(AtualizacoesEstoque.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRelatorioDActionPerformed

    private void radio_DescricaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_DescricaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radio_DescricaoActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        sistemaUI.setEnabled(true);
        sistemaUI.toFront();
    }//GEN-LAST:event_formWindowClosed

    private void btnFecharDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnFecharDKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.dispose();
        }
    }//GEN-LAST:event_btnFecharDKeyPressed

    private void btnRelatorioDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnRelatorioDKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            
            try {
                geraTxtD();
            } catch (IOException ex) {
                Logger.getLogger(AtualizacoesEstoque.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnRelatorioDKeyPressed

    private void btnRelatorioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnRelatorioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                geraTxt();
            } catch (IOException ex) {
                Logger.getLogger(AtualizacoesEstoque.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnRelatorioKeyPressed

    private void atualizacaoBuscar(){
        if (radio_ProdutoA.isSelected() || radio_Fornecedor.isSelected()){
            limpaTabelaAtualizacoes();
            String palavraBusca = campoBusca.getText();
            if (palavraBusca.equals("")) {
                atualizacaoBuscarTodos();
            } else {
                if (radio_ProdutoA.isSelected()) {
                    ArrayList<String> produto = buscaProduto(palavraBusca);
                    if (produto.isEmpty()){
                        JOptionPane.showMessageDialog(null, "A pesquisa não encontrou nenhuma atualização de aumento de estoque.");
                    } else {
                        Iterator<String> iteradorProduto = produto.iterator();
                        String codigo = "";
                        while (iteradorProduto.hasNext()){
                            codigo = iteradorProduto.next();
                            colocaProdutoTabela(codigo);
                        }
                    }

                } else if (radio_Fornecedor.isSelected()) {
                    ArrayList<String> fornecedor = buscaFornecedor(palavraBusca);
                    if (fornecedor.isEmpty()){
                        JOptionPane.showMessageDialog(null, "A pesquisa não encontrou nenhuma atualização.");
                    } else {
                        Iterator<String> iteradorFornecedor = fornecedor.iterator();
                        String codigo = "";
                        while (iteradorFornecedor.hasNext()){
                            codigo = iteradorFornecedor.next();
                            colocaFornecedorTabela(codigo);
                        }
                    }
                } 
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um filtro de busca.");
        }
    }
    
    private void colocaProdutoTabela(String codigo){
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = null;
                sql = "SELECT CodigoProduto, CNPJFornecedor, QuantidadeReposta, PrecoCompra, PorcentagemLucro, PrecoVenda, Data FROM AtualizacaoEstoque WHERE CodigoProduto = ? AND TipoOP = ?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, codigo);
                pst.setString(2, "A");
                ResultSet rs = pst.executeQuery();
                int i = 1;
                while (rs.next()) {
                    String descricaoProduto = buscaDescricaoProduto(rs.getString("CodigoProduto"));
                    String nomeFantasiaCliente = buscaNomeFantasiaFornecedor(rs.getString("CNPJFornecedor"));;
                    DefaultTableModel modeloAux = (DefaultTableModel) tabelaAtualizacoes.getModel();
                    modeloAux.addRow(new Object[]{i, descricaoProduto, nomeFantasiaCliente, rs.getString("QuantidadeReposta"), rs.getString("PrecoCompra"), rs.getString("PorcentagemLucro"), rs.getString("PrecoVenda"), rs.getString("Data")});
                    i++;
                }
            }
        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void colocaFornecedorTabela(String codigo){
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = null;
                sql = "SELECT CodigoProduto, CNPJFornecedor, QuantidadeReposta, PrecoCompra, PorcentagemLucro, PrecoVenda, Data FROM AtualizacaoEstoque WHERE CNPJFornecedor = ? AND TipoOP = ?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, codigo);
                pst.setString(2, "A");
                ResultSet rs = pst.executeQuery();
                int i = 1;
                while (rs.next()) {
                    String descricaoProduto = buscaDescricaoProduto(rs.getString("CodigoProduto"));
                    String nomeFantasiaCliente = buscaNomeFantasiaFornecedor(rs.getString("CNPJFornecedor"));;
                    DefaultTableModel modeloAux = (DefaultTableModel) tabelaAtualizacoes.getModel();
                    modeloAux.addRow(new Object[]{i, descricaoProduto, nomeFantasiaCliente, rs.getString("QuantidadeReposta"), rs.getString("PrecoCompra"), rs.getString("PorcentagemLucro"), rs.getString("PrecoVenda"), rs.getString("Data")});
                    i++;
                }
            }
        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private String buscaDescricaoProduto(String codigo){
        String retorno = "";
        
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = null;
                sql = "SELECT Descricao FROM Produto WHERE Codigo = ?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, codigo);
                ResultSet rs = pst.executeQuery();
                if (rs.next()) {
                    retorno = rs.getString("Descricao");
                }
            }
        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        return retorno;
    }
    
    private String buscaNomeFantasiaFornecedor(String codigo){
        String retorno = "";
        
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = null;
                sql = "SELECT Nome_Fantasia FROM Fornecedor WHERE CPF_CNPJ = ?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, codigo);
                ResultSet rs = pst.executeQuery();
                if (rs.next()) {
                    retorno = rs.getString("Nome_Fantasia");
                }
            }
        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        return retorno;
    }
    
    private void colocaProdutoTabelaD(String codigo){
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = null;
                sql = "SELECT CodigoProduto, Descricao_Retirada, QuantidadeReposta, Data FROM AtualizacaoEstoque WHERE CodigoProduto = ? AND TipoOP = ?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, codigo);
                pst.setString(2, "D");
                ResultSet rs = pst.executeQuery();
                int i = 1;
                while (rs.next()) {
                    String descricaoProduto = buscaDescricaoProduto(rs.getString("CodigoProduto"));
                    DefaultTableModel modeloAux = (DefaultTableModel) tabelaDiminuicoes.getModel();
                    modeloAux.addRow(new Object[]{i, descricaoProduto, rs.getString("Descricao_Retirada"), rs.getString("QuantidadeReposta"), rs.getString("Data")});
                    i++;
                }
            }
        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void colocaDescricaoTabelaD(String descricao){
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = null;
                sql = "SELECT CodigoProduto, Descricao_Retirada, QuantidadeReposta, Data FROM AtualizacaoEstoque WHERE Descricao_Retirada LIKE'%?%'";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, descricao);
                pst.setString(2, "D");
                ResultSet rs = pst.executeQuery();
                int i = 1;
                while (rs.next()) {
                    String descricaoProduto = buscaDescricaoProduto(rs.getString("CodigoProduto"));
                    DefaultTableModel modeloAux = (DefaultTableModel) tabelaDiminuicoes.getModel();
                    modeloAux.addRow(new Object[]{i, descricaoProduto, rs.getString("Descricao_Retirada"), rs.getString("QuantidadeReposta"), rs.getString("Data")});
                    i++;
                }
                if (tabelaDiminuicoes.getRowCount() == 0){
                    JOptionPane.showMessageDialog(null, "A pesquisa não encontrou nenhuma atualização.");
                }
            }
        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void atualizacaoBuscarD(){
        if (radio_Produto.isSelected() || radio_Descricao.isSelected()){
            limpaTabelaAtualizacoesD();
            String sql = null;
            String palavraBusca = campoBuscaD.getText();
            if (palavraBusca.equals("")) {
                atualizacaoDBuscarTodos();
            } else {
                if (radio_Produto.isSelected()) {
                    ArrayList<String> produto = buscaProduto(palavraBusca);
                    if (produto.isEmpty()){
                        JOptionPane.showMessageDialog(null, "A pesquisa não encontrou nenhuma atualização de retirada de estoque.");
                    } else {
                        Iterator<String> iteradorProduto = produto.iterator();
                        String codigo = "";
                        while (iteradorProduto.hasNext()){
                            codigo = iteradorProduto.next();
                            colocaProdutoTabelaD(codigo);
                        }
                    }

                } else if (radio_Descricao.isSelected()) {
                    colocaDescricaoTabelaD(palavraBusca);
                } 
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um filtro de busca.");
        }
    }
    
    private ArrayList<String> buscaProduto(String palavraBusca){
        ArrayList<String> listaProdutos = new ArrayList();

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = "SELECT * FROM Produto WHERE Descricao LIKE '%" + palavraBusca +"%'";
                PreparedStatement pst = con.prepareStatement(sql);
                ResultSet rs = pst.executeQuery();

                if(rs.next()){
                    String produto = rs.getString("Codigo");
                    listaProdutos.add(produto);
                }
            }
        } catch (SQLException | HeadlessException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        return listaProdutos;
    }
    
    private ArrayList<String> buscaFornecedor(String palavraBusca){
        ArrayList<String> listaFornecedores = new ArrayList();
        
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = "SELECT * FROM Fornecedor WHERE Nome_Fantasia LIKE '%" + palavraBusca +"%'";
                PreparedStatement pst = con.prepareStatement(sql);
                ResultSet rs = pst.executeQuery();

                if(rs.next()){
                    String fornecedor = rs.getString("CPF_CNPJ");
                    listaFornecedores.add(fornecedor);
                }
            }
        } catch (SQLException | HeadlessException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        return listaFornecedores;
    }
    
    private void limpaTabelaAtualizacoes(){
        int rowCount = tabelaAtualizacoes.getRowCount();
        if (rowCount > 0) {
            while (rowCount > 0) {
                ((DefaultTableModel) tabelaAtualizacoes.getModel()).removeRow(rowCount - 1);
                rowCount--;
            }
        }
    }
    
    private void limpaTabelaAtualizacoesD(){
        int rowCount = tabelaDiminuicoes.getRowCount();
        if (rowCount > 0) {
            while (rowCount > 0) {
                ((DefaultTableModel) tabelaDiminuicoes.getModel()).removeRow(rowCount - 1);
                rowCount--;
            }
        }
    }
    
    private void atualizacaoBuscarTodos(){
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = null;
                sql = "SELECT CodigoProduto, CNPJFornecedor, QuantidadeReposta, PrecoCompra, PorcentagemLucro, PrecoVenda, Data FROM AtualizacaoEstoque WHERE TipoOP = ?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, "A");
                ResultSet rs = pst.executeQuery();
                int i = 1;
                while (rs.next()) {
                    String descricaoProduto = buscaDescricaoProduto(rs.getString("CodigoProduto"));
                    String nomeFantasiaCliente = buscaNomeFantasiaFornecedor(rs.getString("CNPJFornecedor"));;
                    DefaultTableModel modeloAux = (DefaultTableModel) tabelaAtualizacoes.getModel();
                    modeloAux.addRow(new Object[]{i, descricaoProduto, nomeFantasiaCliente, rs.getString("QuantidadeReposta"), rs.getString("PrecoCompra"), rs.getString("PorcentagemLucro"), rs.getString("PrecoVenda"), rs.getString("Data")});
                    i++;
                }
                
                if (tabelaAtualizacoes.getRowCount() == 0){
                    JOptionPane.showMessageDialog(null, "A pesquisa não encontrou nenhuma atualização de aumento de estoque.");
                }
            }
        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void atualizacaoDBuscarTodos(){
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = null;
                sql = "SELECT CodigoProduto, Descricao_Retirada, QuantidadeReposta, Data FROM AtualizacaoEstoque WHERE TipoOP = ?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, "D");
                ResultSet rs = pst.executeQuery();
                int i = 1;
                while (rs.next()) {
                    String descricaoProduto = buscaDescricaoProduto(rs.getString("CodigoProduto"));
                    DefaultTableModel modeloAux = (DefaultTableModel) tabelaDiminuicoes.getModel();
                    modeloAux.addRow(new Object[]{i, descricaoProduto, rs.getString("Descricao_Retirada"), rs.getString("QuantidadeReposta"), rs.getString("Data")});
                    i++;
                }
                
                if (tabelaDiminuicoes.getRowCount() == 0){
                    JOptionPane.showMessageDialog(null, "A pesquisa não encontrou nenhuma atualização de retirada de estoque.");
                }
            }
        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void geraTxt() throws IOException{
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
	Date date = new Date();
	String dataAux = dateFormat.format(date);
        dataAux = dataAux.replaceAll(" ", "--");
        dataAux = dataAux.replaceAll("/", "-");
        dataAux = dataAux.replaceAll(":", "");
        
        File f = new File(".\\saida");
        if(f.mkdir()){
        }
        f = new File(".\\saida\\historicoAtualizacao");
        if(f.mkdir()){
        }
        
        try (FileWriter arq = new FileWriter(".\\saida\\historicoAtualizacao/BuscaAtualizacoesEntradaProduto--"+dataAux+".txt")) {
            PrintWriter gravarArq = new PrintWriter(arq);

            gravarArq.printf("+-------------- RESULTADO DA BUSCA: ATUALIZAÇÕES DE ENTRADA DE PRODUTOS --------------+%n%n");
            gravarArq.printf("LISTAGEM:%n%n");
            int i;
            for (i=0; i< tabelaAtualizacoes.getRowCount(); i++) {
                gravarArq.printf("# %2d ##########################%n", i+1);
                gravarArq.printf("Produto: " + (String)tabelaAtualizacoes.getValueAt(i, 1)+"%n");
                gravarArq.printf("Fornecedor: " + (String)tabelaAtualizacoes.getValueAt(i, 2)+"%n");
                gravarArq.printf("Quantidade Reposta: " + (String)tabelaAtualizacoes.getValueAt(i, 3)+"%n");
                gravarArq.printf("Preço de Compra: " + (String)tabelaAtualizacoes.getValueAt(i, 4)+"%n");
                gravarArq.printf("Margem de Lucro: " + (String)tabelaAtualizacoes.getValueAt(i, 5)+"%n");
                gravarArq.printf("Preço de Venda: " + (String)tabelaAtualizacoes.getValueAt(i, 6)+"%n");
                gravarArq.printf("Data: " + (String)tabelaAtualizacoes.getValueAt(i, 7)+"%n");
                gravarArq.printf("%n");
            }
            gravarArq.printf("+-------------------------------------------------------------+%n");
            arq.close();

            JOptionPane.showMessageDialog(null,"Dados salvos em 'saida\\historicoAtualizacao/BuscaAtualizacoesEntradaProduto--"+dataAux+".txt'");
        }
    }
    
    private void geraTxtD() throws IOException{
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
	Date date = new Date();
	String dataAux = dateFormat.format(date);
        dataAux = dataAux.replaceAll(" ", "--");
        dataAux = dataAux.replaceAll("/", "-");
        dataAux = dataAux.replaceAll(":", "");
        
        File f = new File(".\\saida");
        if(f.mkdir()){
        }
        f = new File(".\\saida\\historicoAtualizacao");
        if(f.mkdir()){
        }
        
        try (FileWriter arq = new FileWriter(".\\saida\\historicoAtualizacao/BuscaAtualizacoesSaidaProduto--"+dataAux+".txt")) {
            PrintWriter gravarArq = new PrintWriter(arq);

            gravarArq.printf("+-------------- RESULTADO DA BUSCA: ATUALIZAÇÕES DE SAÍDA DE PRODUTOS --------------+%n%n");
            gravarArq.printf("LISTAGEM:%n%n");
            int i;
            for (i=0; i< tabelaAtualizacoes.getRowCount(); i++) {
                gravarArq.printf("# %2d ##########################%n", i+1);
                gravarArq.printf("Produto: " + (String)tabelaAtualizacoes.getValueAt(i, 1)+"%n");
                gravarArq.printf("Descrição: " + (String)tabelaAtualizacoes.getValueAt(i, 2)+"%n");
                gravarArq.printf("Quantidade Retirada: " + (String)tabelaAtualizacoes.getValueAt(i, 3)+"%n");
                gravarArq.printf("Data: " + (String)tabelaAtualizacoes.getValueAt(i, 4)+"%n");
                gravarArq.printf("%n");
            }
            gravarArq.printf("+-------------------------------------------------------------+%n");
            arq.close();

            JOptionPane.showMessageDialog(null,"Dados salvos em 'saida\\historicoAtualizacao/BuscaAtualizacoesSaidaProduto--"+dataAux+".txt'");
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AtualizacoesEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscarD;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnFecharD;
    private javax.swing.JButton btnRelatorio;
    private javax.swing.JButton btnRelatorioD;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JTextField campoBusca;
    private javax.swing.JTextField campoBuscaD;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton radio_Descricao;
    private javax.swing.JRadioButton radio_Fornecedor;
    private javax.swing.JRadioButton radio_Produto;
    private javax.swing.JRadioButton radio_ProdutoA;
    private javax.swing.JTable tabelaAtualizacoes;
    private javax.swing.JTable tabelaDiminuicoes;
    // End of variables declaration//GEN-END:variables
}
