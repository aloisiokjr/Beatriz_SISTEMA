/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.cliente;

import controller.ClienteController;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Cliente;
import util.SQL_URL;

/**
 *
 * @author KLEYN
 */
public class ClienteUI extends javax.swing.JFrame {
    
    private Cliente clienteAux = null;
    private CriarCliente criarCliente = null;
    private EditarCliente editarCliente = null;
    private VisualizarCliente visualizarCliente = null;
    
    private ClienteController clienteController = null;
    
    /**
     * Creates new form ClienteUI
     * @param clienteController
     */
    public ClienteUI(ClienteController clienteController) {
        this.clienteController = clienteController;
        initComponents();
        this.setVisible(true);
        this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);
        this.toFront();
        setagemInicial();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaClientes = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        btnEditar = new javax.swing.JButton();
        btnEditar.setEnabled(false);
        btnExcluir = new javax.swing.JButton();
        btnExcluir.setEnabled(false);
        btnCriar = new javax.swing.JButton();
        btnVisualizacao = new javax.swing.JButton();
        btnExcluir.setEnabled(false);
        jPanel3 = new javax.swing.JPanel();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        campoBusca = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        radio_Nome = new javax.swing.JRadioButton();
        radio_NF = new javax.swing.JRadioButton();
        radio_RS = new javax.swing.JRadioButton();
        radio_DOC = new javax.swing.JRadioButton();
        radio_NV = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        btnFechar = new javax.swing.JButton();
        btnRelatorio = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel1.setText("Lista de Clientes");

        tabelaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Nome", "Razão Social", "Nome Fantasia", "Tipo de Cliente", "CPF/CNPJ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaClientes.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tabelaClientes.getTableHeader().setReorderingAllowed(false);
        tabelaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaClientes);
        if (tabelaClientes.getColumnModel().getColumnCount() > 0) {
            tabelaClientes.getColumnModel().getColumn(1).setPreferredWidth(200);
            tabelaClientes.getColumnModel().getColumn(2).setPreferredWidth(200);
            tabelaClientes.getColumnModel().getColumn(3).setPreferredWidth(200);
            tabelaClientes.getColumnModel().getColumn(4).setPreferredWidth(150);
            tabelaClientes.getColumnModel().getColumn(5).setPreferredWidth(150);
        }

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/logoR.png"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(242, 242, 242));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.gray, java.awt.Color.gray, java.awt.Color.gray, java.awt.Color.gray));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("CONTROLES");

        btnEditar.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnEditar.setText("EDITAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        btnEditar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnEditarKeyPressed(evt);
            }
        });

        btnExcluir.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnExcluir.setText("EXCLUIR");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        btnExcluir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnExcluirKeyPressed(evt);
            }
        });

        btnCriar.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnCriar.setText("LANÇAMENTO");
        btnCriar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCriarActionPerformed(evt);
            }
        });
        btnCriar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCriarKeyPressed(evt);
            }
        });

        btnVisualizacao.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnVisualizacao.setText("VISUALIZAÇÃO");
        btnVisualizacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisualizacaoActionPerformed(evt);
            }
        });
        btnVisualizacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnVisualizacaoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnCriar, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                            .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnVisualizacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCriar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnVisualizacao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExcluir)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(242, 242, 242));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.gray, java.awt.Color.gray, java.awt.Color.gray, java.awt.Color.gray));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("BUSCAR POR");

        campoBusca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                campoBuscaKeyPressed(evt);
            }
        });

        btnBuscar.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnBuscar.setText("BUSCAR");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        btnBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnBuscarKeyPressed(evt);
            }
        });

        buttonGroup1.add(radio_Nome);
        radio_Nome.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        radio_Nome.setText("NOME");
        radio_Nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_NomeActionPerformed(evt);
            }
        });

        buttonGroup1.add(radio_NF);
        radio_NF.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        radio_NF.setText("NOME FANTASIA");

        buttonGroup1.add(radio_RS);
        radio_RS.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        radio_RS.setText("RAZÃO SOCIAL");

        buttonGroup1.add(radio_DOC);
        radio_DOC.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        radio_DOC.setText("CPF/CNPJ");
        radio_DOC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_DOCActionPerformed(evt);
            }
        });

        buttonGroup1.add(radio_NV);
        radio_NV.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        radio_NV.setText("NOME VARIANTE");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator6)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(campoBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radio_RS)
                    .addComponent(radio_Nome))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(radio_DOC)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(radio_NF)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radio_NV)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(campoBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radio_Nome)
                    .addComponent(radio_NF)
                    .addComponent(radio_NV))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radio_RS)
                    .addComponent(radio_DOC))
                .addGap(36, 36, 36)
                .addComponent(btnBuscar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnFechar.setBackground(new java.awt.Color(145, 0, 0));
        btnFechar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnFechar.setForeground(new java.awt.Color(255, 255, 255));
        btnFechar.setText("FECHAR");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        btnRelatorio.setBackground(new java.awt.Color(0, 153, 153));
        btnRelatorio.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnRelatorio.setForeground(new java.awt.Color(255, 255, 255));
        btnRelatorio.setText("GERAR RELATÓRIO TXT");
        btnRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRelatorioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRelatorio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnFechar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabelaClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaClientesMouseClicked
        if(tabelaClientes.getSelectedRow() > -1){
            btnEditar.setEnabled(true);
            btnVisualizacao.setEnabled(true);
            btnExcluir.setEnabled(true);
        }
    }//GEN-LAST:event_tabelaClientesMouseClicked

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        clienteAlterar();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEditarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnEditarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            clienteAlterar();
        }
    }//GEN-LAST:event_btnEditarKeyPressed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        clienteExcluir();
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnExcluirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnExcluirKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            clienteExcluir();
        }
    }//GEN-LAST:event_btnExcluirKeyPressed

    private void btnCriarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCriarActionPerformed
        getClienteController().abreCriacaoCliente();
    }//GEN-LAST:event_btnCriarActionPerformed

    private void btnCriarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCriarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            getClienteController().abreCriacaoCliente();
        }
    }//GEN-LAST:event_btnCriarKeyPressed

    private void btnVisualizacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisualizacaoActionPerformed
        clienteVisualizacao();
    }//GEN-LAST:event_btnVisualizacaoActionPerformed

    private void btnVisualizacaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnVisualizacaoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            clienteVisualizacao();
        }
    }//GEN-LAST:event_btnVisualizacaoKeyPressed

    private void campoBuscaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoBuscaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            clienteBuscar();
        }
    }//GEN-LAST:event_campoBuscaKeyPressed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        clienteBuscar();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnBuscarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            clienteBuscar();
        }
    }//GEN-LAST:event_btnBuscarKeyPressed

    private void radio_NomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_NomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radio_NomeActionPerformed

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        getClienteController().fechaClienteUI();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void btnRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRelatorioActionPerformed
        try {
            geraTxt();
        } catch (IOException ex) {
            Logger.getLogger(ClienteUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRelatorioActionPerformed

    private void radio_DOCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_DOCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radio_DOCActionPerformed

    public final void setagemInicial(){
        btnEditar.setEnabled(false);
        btnVisualizacao.setEnabled(false);
        btnExcluir.setEnabled(false);
    }
    
    private void clienteAlterar(){
        String aux = (String)tabelaClientes.getValueAt(tabelaClientes.getSelectedRow(), 5);
        String nome, razaoSocial, nomeFantasia, tipoCliente = "", cpf_cnpj;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = "SELECT * FROM Cliente WHERE DocCliente = ?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, aux);
                ResultSet rs = pst.executeQuery();

                if(rs.next()){
                    nome = rs.getString("Nome");
                    razaoSocial = rs.getString("RazaoSocial");
                    nomeFantasia = rs.getString("NomeFantasia");
                    tipoCliente = rs.getString("TipoCliente");
                    cpf_cnpj = rs.getString("DocCliente");
                                        
                    ArrayList<String> listaNomes = buscaNomes(cpf_cnpj);
                    
                    Cliente cliente = new Cliente(nome, razaoSocial, nomeFantasia, tipoCliente, cpf_cnpj, listaNomes);
                    setClienteAux(cliente);
                    clienteController.abreEdicaoCliente();
                }
            }
        } catch (SQLException | HeadlessException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private ArrayList<String> buscaNomes(String doc){
        ArrayList<String> listaNomes = new ArrayList();
        
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = null;
                sql = "SELECT NomeVariante FROM Cliente_NomeVariante WHERE DocCliente = ?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, doc);
                ResultSet rs = pst.executeQuery();
                while (rs.next()) {
                    listaNomes.add(rs.getString("NomeVariante"));
                }
            }
        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        return listaNomes;
    }
    
    private void clienteExcluir(){
        int linhaSelecionada = tabelaClientes.getSelectedRow();
        int colunaSelecionada = 3;
        String message = "Deseja realmente excluir o cliente '" + ((String)tabelaClientes.getValueAt(linhaSelecionada, colunaSelecionada)) + "'?";
        String title = "Confirmação de Exclusao";
        int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = SQL_URL.getUrl();
                try (Connection con = DriverManager.getConnection(url)) {
                    String sql = "DELETE FROM Cliente WHERE DocCliente = ?";
                    PreparedStatement pst = con.prepareStatement(sql);
                    colunaSelecionada = 5;
                    pst.setString(1, (String) tabelaClientes.getValueAt(linhaSelecionada, colunaSelecionada));
                    ResultSet rs = pst.executeQuery();
                    deletaNome((String) tabelaClientes.getValueAt(linhaSelecionada, colunaSelecionada));
                    
                    if(rs.next()){
                        
                    }
                }
            } catch (HeadlessException | ClassNotFoundException e) {
                JOptionPane.showMessageDialog(null, e);
            } catch (SQLException e) {
                colunaSelecionada = 3;
                JOptionPane.showMessageDialog(null, "O cliente '" + (String) tabelaClientes.getValueAt(linhaSelecionada, colunaSelecionada) + "' foi excluído.");
                setagemInicial();
                clienteBuscaTodos();
            }
        }
        if (reply == JOptionPane.NO_OPTION) {

        }
    }
    
    private void deletaNome(String doc){
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = "DELETE FROM Cliente_NomeVariante WHERE DocCliente = ?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, doc);
                ResultSet rs = pst.executeQuery();

            }
        } catch (HeadlessException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, e);
        } catch (SQLException e) {
            //JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void clienteBuscar(){
        if (radio_Nome.isSelected() || radio_RS.isSelected() || radio_NF.isSelected() || radio_DOC.isSelected() || radio_NV.isSelected()){
            limpaTabelaClientes();
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = SQL_URL.getUrl();
                try (Connection con = DriverManager.getConnection(url)) {
                    String sql = null;
                    String palavraBusca = campoBusca.getText();
                    if (palavraBusca.equals("")) {
                        clienteBuscaTodos();
                    } else {
                        if (radio_NV.isSelected()){
                            buscaNomeVariante(palavraBusca);
                        } else {
                            if (radio_Nome.isSelected()) {
                                sql = "SELECT * FROM Cliente WHERE Nome LIKE '%"+palavraBusca+"%'";
                            } else if (radio_RS.isSelected()) {
                                sql = "SELECT * FROM Cliente WHERE RazaoSocial LIKE '%"+palavraBusca+"%'";
                            } else if (radio_NF.isSelected()){
                                sql = "SELECT * FROM Cliente WHERE NomeFantasia LIKE '%"+palavraBusca+"%'";
                            } else if (radio_DOC.isSelected()){
                                sql = "SELECT * FROM Cliente WHERE DocCliente LIKE '%"+palavraBusca+"%'";
                            }

                            PreparedStatement pst = con.prepareStatement(sql);;
                            ResultSet rs = pst.executeQuery();
                            int i = 1;
                            while (rs.next()) {
                                DefaultTableModel modeloAux = (DefaultTableModel) tabelaClientes.getModel();
                                String tipo = rs.getString("TipoCliente");
                                if (tipo.equals("F")){
                                    tipo = "FÍSICO";
                                } else if (tipo.equals("J")){
                                    tipo = "JURÍDICO";
                                }
                                modeloAux.addRow(new Object[]{i,rs.getString("Nome"),rs.getString("RazaoSocial"),rs.getString("NomeFantasia"),tipo,rs.getString("DocCliente")});
                                i++;
                            }

                            if (tabelaClientes.getRowCount() == 0) {
                                JOptionPane.showMessageDialog(null, "A pesquisa não encontrou nenhum cliente.");
                            }
                        }
                    }
                }
            } catch (HeadlessException | ClassNotFoundException | SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um filtro de busca.");
        }
    }
    
    private void buscaNomeVariante(String aux){
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = null;
                sql = "SELECT * FROM Cliente_NomeVariante WHERE NomeVariante LIKE '%"+aux+"%'";
                PreparedStatement pst = con.prepareStatement(sql);
                ResultSet rs = pst.executeQuery();
                int i = 1;
                while (rs.next()) {
                    i = buscaCliente(rs.getString("DocCliente"),i);
                }
                if (tabelaClientes.getRowCount() == 0) {
                    JOptionPane.showMessageDialog(null, "A pesquisa não encontrou nenhum cliente.");
                }
            }
        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private int buscaCliente(String doc, int index){
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = null;
                sql = "SELECT * FROM Cliente WHERE DocCliente = ?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, doc);
                ResultSet rs = pst.executeQuery();
                while (rs.next()) {
                    DefaultTableModel modeloAux = (DefaultTableModel) tabelaClientes.getModel();
                    String tipo = rs.getString("TipoCliente");
                    if (tipo.equals("F")){
                        tipo = "FÍSICO";
                    } else if (tipo.equals("J")){
                        tipo = "JURÍDICO";
                    }
                    modeloAux.addRow(new Object[]{index,rs.getString("Nome"),rs.getString("RazaoSocial"),rs.getString("NomeFantasia"),tipo,rs.getString("DocCliente")});
                    index++;
                }
            }
        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return index;
    }
    
    private void clienteVisualizacao(){
        String aux = (String)tabelaClientes.getValueAt(tabelaClientes.getSelectedRow(), 5);
        String nome, razaoSocial, nomeFantasia, tipoCliente = "", cpf_cnpj;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = "SELECT * FROM Cliente WHERE DocCliente = ?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, aux);
                ResultSet rs = pst.executeQuery();

                if(rs.next()){
                    nome = rs.getString("Nome");
                    razaoSocial = rs.getString("RazaoSocial");
                    nomeFantasia = rs.getString("NomeFantasia");
                    tipoCliente = rs.getString("TipoCliente");
                    cpf_cnpj = rs.getString("DocCliente");
                                        
                    ArrayList<String> listaNomes = buscaNomes(cpf_cnpj);
                    
                    Cliente cliente = new Cliente(nome, razaoSocial, nomeFantasia, tipoCliente, cpf_cnpj, listaNomes);
                    setClienteAux(cliente);
                    clienteController.abreVisualizacaoCliente();
                }
            }
        } catch (SQLException | HeadlessException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    public void clienteBuscaTodos(){
        limpaTabelaClientes();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = null;
                sql = "SELECT * FROM Cliente";
                PreparedStatement pst = con.prepareStatement(sql);
                ResultSet rs = pst.executeQuery();
                int i = 1;
                while (rs.next()) {
                    DefaultTableModel modeloAux = (DefaultTableModel) tabelaClientes.getModel();
                    String tipo = rs.getString("TipoCliente");
                    if (tipo.equals("F")){
                        tipo = "FÍSICO";
                    } else if (tipo.equals("J")){
                        tipo = "JURÍDICO";
                    }
                    modeloAux.addRow(new Object[]{i,rs.getString("Nome"),rs.getString("RazaoSocial"),rs.getString("NomeFantasia"),tipo,rs.getString("DocCliente")});
                    i++;
                }
                if (tabelaClientes.getRowCount() == 0) {
                    JOptionPane.showMessageDialog(null, "A pesquisa não encontrou nenhum cliente.");
                }
            }
        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void limpaTabelaClientes(){
        int rowCount = tabelaClientes.getRowCount();
        if (rowCount > 0) {
            while (rowCount > 0) {
                ((DefaultTableModel) tabelaClientes.getModel()).removeRow(rowCount - 1);
                rowCount--;
            }
        }
    }
    
    private void geraTxt() throws IOException{
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
	Date date = new Date();
	String dataAux = dateFormat.format(date);
        dataAux = dataAux.replaceAll(" ", "--");
        dataAux = dataAux.replaceAll("/", "-");
        dataAux = dataAux.replaceAll(":", "");
        
        File f = new File(".\\saida");
        if(f.mkdir()){
        }
        f = new File(".\\saida\\clientes");
        if(f.mkdir()){
        }
        
        try (FileWriter arq = new FileWriter(".\\saida\\clientes/BuscaClientes--"+dataAux+".txt")) {
            PrintWriter gravarArq = new PrintWriter(arq);

            gravarArq.printf("+-------------- RESULTADO DA BUSCA: CLIENTES --------------+%n%n");
            gravarArq.printf("LISTAGEM:%n%n");
            int i;
            for (i=0; i< tabelaClientes.getRowCount(); i++) {
                gravarArq.printf("# %2d ##########################%n", i+1);
                gravarArq.printf("Nome: " + (String)tabelaClientes.getValueAt(i, 1)+"%n");
                gravarArq.printf("Razão Social: " + (String)tabelaClientes.getValueAt(i, 2)+"%n");
                gravarArq.printf("Nome Fantasia: " + (String)tabelaClientes.getValueAt(i, 3)+"%n");
                gravarArq.printf("Tipo de Cliente: " + (String)tabelaClientes.getValueAt(i, 4)+"%n");
                gravarArq.printf("CPF/CNPJ: " + (String)tabelaClientes.getValueAt(i, 5)+"%n");
                gravarArq.printf("%n");
            }
            gravarArq.printf("+-------------------------------------------------------------+%n");
            arq.close();

            JOptionPane.showMessageDialog(null,"Dados salvos em 'saida/clientes/BuscaClientes--"+dataAux+".txt'");
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClienteUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCriar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnRelatorio;
    private javax.swing.JButton btnVisualizacao;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField campoBusca;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JRadioButton radio_DOC;
    private javax.swing.JRadioButton radio_NF;
    private javax.swing.JRadioButton radio_NV;
    private javax.swing.JRadioButton radio_Nome;
    private javax.swing.JRadioButton radio_RS;
    private javax.swing.JTable tabelaClientes;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the clienteAux
     */
    public Cliente getClienteAux() {
        return clienteAux;
    }

    /**
     * @param clienteAux the clienteAux to set
     */
    public void setClienteAux(Cliente clienteAux) {
        this.clienteAux = clienteAux;
    }

    /**
     * @return the criarCliente
     */
    public CriarCliente getCriarCliente() {
        return criarCliente;
    }

    /**
     * @param criarCliente the criarCliente to set
     */
    public void setCriarCliente(CriarCliente criarCliente) {
        this.criarCliente = criarCliente;
    }

    /**
     * @return the editarCliente
     */
    public EditarCliente getEditarCliente() {
        return editarCliente;
    }

    /**
     * @param editarCliente the editarCliente to set
     */
    public void setEditarCliente(EditarCliente editarCliente) {
        this.editarCliente = editarCliente;
    }

    /**
     * @return the visualizarCliente
     */
    public VisualizarCliente getVisualizarCliente() {
        return visualizarCliente;
    }

    /**
     * @param visualizarCliente the visualizarCliente to set
     */
    public void setVisualizarCliente(VisualizarCliente visualizarCliente) {
        this.visualizarCliente = visualizarCliente;
    }

    /**
     * @return the clienteController
     */
    public ClienteController getClienteController() {
        return clienteController;
    }

    /**
     * @param clienteController the clienteController to set
     */
    public void setClienteController(ClienteController clienteController) {
        this.clienteController = clienteController;
    }
}
