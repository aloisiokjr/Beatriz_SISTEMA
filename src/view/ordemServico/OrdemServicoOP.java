/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.ordemServico;

import controller.OrdemServicoController;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Arquivo;
import model.OrdemServico;
import model.Requisito;
import model.SituacaoOS;
import util.SQL_URL;

/**
 *
 * @author KLEYN
 */
public class OrdemServicoOP extends javax.swing.JFrame {
    
    class MyCustomFilter extends javax.swing.filechooser.FileFilter {
        @Override
        public boolean accept(File file) {
            // Allow only directories, or files with ".txt" extension
            return file.isDirectory() || file.getAbsolutePath().endsWith(".pdf");
        }
        @Override
        public String getDescription() {
            // This description will be displayed in the dialog,
            // hard-coded = ugly, should be done via I18N
            return "Documento PDF (*.pdf)";
        }
    } 
    
    private ArrayList<Requisito> listaRequisitos = null;
    private OrdemServicoController osController = null;
    private OrdemServico osAux = null;

    private int indexSituacao = 1;
    
    private SituacaoOS situacaoOSAux = null;
    
    /**
     * Creates new form OrdemServicoOP
     * @param osController
     * @param osAux
     */
    public OrdemServicoOP(OrdemServicoController osController, OrdemServico osAux) {
        this.osController = osController;
        this.osAux = osAux;
        initComponents();
        this.setVisible(true);
        this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);
        this.toFront();
        setagemInicial();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        criarSituacao = new javax.swing.JDialog();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        campoCaminho = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        selecionarArquivoC = new javax.swing.JButton();
        adicionarArquivoC = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        campoPendencia = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        cmpoDataStatusArquivo = new javax.swing.JFormattedTextField();
        jPanel12 = new javax.swing.JPanel();
        campoDescricaoC = new javax.swing.JTextField();
        jLabel145 = new javax.swing.JLabel();
        jLabel146 = new javax.swing.JLabel();
        campoDataC = new javax.swing.JFormattedTextField();
        jLabel148 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tabelaArquivosC = new javax.swing.JTable();
        btnRemoveArquivo = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnFecharTela2 = new javax.swing.JButton();
        btnSalvar2 = new javax.swing.JButton();
        jDialog1 = new javax.swing.JDialog();
        jFileChooser1 = new javax.swing.JFileChooser();
        editarSituacao = new javax.swing.JDialog();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        campoCaminho1 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        selecionarArquivoC1 = new javax.swing.JButton();
        adicionarArquivoC1 = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        campoPendencia1 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        cmpoDataStatusArquivo1 = new javax.swing.JFormattedTextField();
        jPanel15 = new javax.swing.JPanel();
        campoDescricaoC1 = new javax.swing.JTextField();
        jLabel154 = new javax.swing.JLabel();
        jLabel155 = new javax.swing.JLabel();
        campoDataC1 = new javax.swing.JFormattedTextField();
        jLabel156 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tabelaArquivosC1 = new javax.swing.JTable();
        btnRemoveArquivo1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btnFecharTela3 = new javax.swing.JButton();
        btnSalvar3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel123 = new javax.swing.JLabel();
        jLabel124 = new javax.swing.JLabel();
        campoCliente = new javax.swing.JTextField();
        jLabel134 = new javax.swing.JLabel();
        jLabel125 = new javax.swing.JLabel();
        campoPlaca = new javax.swing.JFormattedTextField();
        campoNomeMotorista = new javax.swing.JTextField();
        jLabel126 = new javax.swing.JLabel();
        jLabel127 = new javax.swing.JLabel();
        campoCPF = new javax.swing.JFormattedTextField();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        campoData = new javax.swing.JFormattedTextField();
        jLabel153 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnFecharTela1 = new javax.swing.JButton();
        btnSalvar1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        painel1 = new javax.swing.JPanel();
        jLabel128 = new javax.swing.JLabel();
        campoDescricao1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaArquivosS1 = new javax.swing.JTable();
        jLabel129 = new javax.swing.JLabel();
        jLabel130 = new javax.swing.JLabel();
        campoData1 = new javax.swing.JFormattedTextField();
        campoStatus1 = new javax.swing.JTextField();
        jLabel131 = new javax.swing.JLabel();
        btnConclur1 = new javax.swing.JButton();
        painel2 = new javax.swing.JPanel();
        campoDescricao2 = new javax.swing.JTextField();
        jLabel132 = new javax.swing.JLabel();
        jLabel133 = new javax.swing.JLabel();
        campoData2 = new javax.swing.JFormattedTextField();
        btnConclur2 = new javax.swing.JButton();
        campoStatus2 = new javax.swing.JTextField();
        jLabel135 = new javax.swing.JLabel();
        jLabel136 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaArquivosS2 = new javax.swing.JTable();
        painel3 = new javax.swing.JPanel();
        campoDescricao3 = new javax.swing.JTextField();
        jLabel141 = new javax.swing.JLabel();
        jLabel142 = new javax.swing.JLabel();
        campoData3 = new javax.swing.JFormattedTextField();
        btnConcluir3 = new javax.swing.JButton();
        campoStatus3 = new javax.swing.JTextField();
        jLabel143 = new javax.swing.JLabel();
        jLabel144 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tabelaArquivosS3 = new javax.swing.JTable();
        painel4 = new javax.swing.JPanel();
        campoDescricao4 = new javax.swing.JTextField();
        jLabel137 = new javax.swing.JLabel();
        jLabel138 = new javax.swing.JLabel();
        campoData4 = new javax.swing.JFormattedTextField();
        btnConcluir4 = new javax.swing.JButton();
        campoStatus4 = new javax.swing.JTextField();
        jLabel139 = new javax.swing.JLabel();
        jLabel140 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelaArquivosS4 = new javax.swing.JTable();
        painel5 = new javax.swing.JPanel();
        jLabel147 = new javax.swing.JLabel();
        campoDescricao5 = new javax.swing.JTextField();
        campoData5 = new javax.swing.JFormattedTextField();
        jLabel149 = new javax.swing.JLabel();
        btnConcluir5 = new javax.swing.JButton();
        campoStatus5 = new javax.swing.JTextField();
        jLabel150 = new javax.swing.JLabel();
        jLabel151 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tabelaArquivosS5 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btnCriar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        btnConcluirOS = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnConcluirS = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaArquivos = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        removerArquivoOS = new javax.swing.JButton();
        jLabel152 = new javax.swing.JLabel();
        campoStatus = new javax.swing.JTextField();

        jPanel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        campoCaminho.setEditable(false);

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel22.setText("Caminho");

        selecionarArquivoC.setText("SELECIONAR");
        selecionarArquivoC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecionarArquivoCActionPerformed(evt);
            }
        });
        selecionarArquivoC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                selecionarArquivoCKeyPressed(evt);
            }
        });

        adicionarArquivoC.setText("ADICIONAR");
        adicionarArquivoC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarArquivoCActionPerformed(evt);
            }
        });
        adicionarArquivoC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                adicionarArquivoCKeyPressed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel25.setText("ADICIONAR ARQUIVOS");

        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel26.setText("Pendência:");

        jLabel27.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel27.setText("Data:");

        try {
            cmpoDataStatusArquivo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campoCaminho)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(selecionarArquivoC))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmpoDataStatusArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(adicionarArquivoC, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoPendencia, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoCaminho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selecionarArquivoC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(campoPendencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(cmpoDataStatusArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adicionarArquivoC))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel12.setBackground(new java.awt.Color(250, 250, 250));
        jPanel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel12.setDoubleBuffered(false);
        jPanel12.setEnabled(false);

        campoDescricaoC.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel145.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel145.setText("Descrição");

        jLabel146.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel146.setText("Data");

        try {
            campoDataC.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoDataC.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel148.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel148.setText("Arquivos");

        tabelaArquivosC.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tabelaArquivosC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pendência", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaArquivosC.getTableHeader().setReorderingAllowed(false);
        jScrollPane6.setViewportView(tabelaArquivosC);
        if (tabelaArquivosC.getColumnModel().getColumnCount() > 0) {
            tabelaArquivosC.getColumnModel().getColumn(0).setResizable(false);
            tabelaArquivosC.getColumnModel().getColumn(0).setPreferredWidth(250);
            tabelaArquivosC.getColumnModel().getColumn(1).setResizable(false);
            tabelaArquivosC.getColumnModel().getColumn(1).setPreferredWidth(100);
        }

        btnRemoveArquivo.setText("REMOVER");
        btnRemoveArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveArquivoActionPerformed(evt);
            }
        });
        btnRemoveArquivo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnRemoveArquivoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel148, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnRemoveArquivo)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel145, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoDescricaoC, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(campoDataC, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                                    .addComponent(jLabel146, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel146, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel145, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campoDataC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoDescricaoC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel148)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRemoveArquivo)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel4.setText("CADASTRO DE STATUS DA ORDEM DE SERVIÇO");

        btnFecharTela2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnFecharTela2.setText("FECHAR");
        btnFecharTela2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharTela2ActionPerformed(evt);
            }
        });
        btnFecharTela2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnFecharTela2KeyPressed(evt);
            }
        });

        btnSalvar2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSalvar2.setText("SALVAR");
        btnSalvar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvar2ActionPerformed(evt);
            }
        });
        btnSalvar2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSalvar2KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFecharTela2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSalvar2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(74, 74, 74)))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnFecharTela2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSalvar2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(87, 87, 87))
        );

        javax.swing.GroupLayout criarSituacaoLayout = new javax.swing.GroupLayout(criarSituacao.getContentPane());
        criarSituacao.getContentPane().setLayout(criarSituacaoLayout);
        criarSituacaoLayout.setHorizontalGroup(
            criarSituacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(criarSituacaoLayout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        criarSituacaoLayout.setVerticalGroup(
            criarSituacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(criarSituacaoLayout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jDialog1.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                jDialog1WindowClosed(evt);
            }
        });

        jFileChooser1.setDialogTitle("");
        jFileChooser1.setFileFilter(new MyCustomFilter());
        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        campoCaminho1.setEditable(false);

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel23.setText("Caminho");

        selecionarArquivoC1.setText("SELECIONAR");
        selecionarArquivoC1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecionarArquivoC1ActionPerformed(evt);
            }
        });
        selecionarArquivoC1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                selecionarArquivoC1KeyPressed(evt);
            }
        });

        adicionarArquivoC1.setText("ADICIONAR");
        adicionarArquivoC1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarArquivoC1ActionPerformed(evt);
            }
        });
        adicionarArquivoC1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                adicionarArquivoC1KeyPressed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel28.setText("ADICIONAR ARQUIVOS");

        jLabel29.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel29.setText("Pendência:");

        jLabel30.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel30.setText("Data:");

        try {
            cmpoDataStatusArquivo1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campoCaminho1)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(selecionarArquivoC1))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmpoDataStatusArquivo1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(adicionarArquivoC1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoPendencia1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoCaminho1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selecionarArquivoC1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(campoPendencia1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(cmpoDataStatusArquivo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adicionarArquivoC1))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel15.setBackground(new java.awt.Color(250, 250, 250));
        jPanel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel15.setDoubleBuffered(false);
        jPanel15.setEnabled(false);

        campoDescricaoC1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel154.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel154.setText("Descrição");

        jLabel155.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel155.setText("Data");

        try {
            campoDataC1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoDataC1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel156.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel156.setText("Arquivos");

        tabelaArquivosC1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tabelaArquivosC1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pendência", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaArquivosC1.getTableHeader().setReorderingAllowed(false);
        jScrollPane8.setViewportView(tabelaArquivosC1);
        if (tabelaArquivosC1.getColumnModel().getColumnCount() > 0) {
            tabelaArquivosC1.getColumnModel().getColumn(0).setResizable(false);
            tabelaArquivosC1.getColumnModel().getColumn(0).setPreferredWidth(250);
            tabelaArquivosC1.getColumnModel().getColumn(1).setResizable(false);
            tabelaArquivosC1.getColumnModel().getColumn(1).setPreferredWidth(100);
        }

        btnRemoveArquivo1.setText("REMOVER");
        btnRemoveArquivo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveArquivo1ActionPerformed(evt);
            }
        });
        btnRemoveArquivo1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnRemoveArquivo1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel156, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnRemoveArquivo1)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel154, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoDescricaoC1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(campoDataC1, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                                    .addComponent(jLabel155, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel155, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel154, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campoDataC1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoDescricaoC1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel156)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRemoveArquivo1)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel5.setText("EDIÇÃO DE STATUS DA ORDEM DE SERVIÇO");

        btnFecharTela3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnFecharTela3.setText("FECHAR");
        btnFecharTela3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharTela3ActionPerformed(evt);
            }
        });
        btnFecharTela3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnFecharTela3KeyPressed(evt);
            }
        });

        btnSalvar3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSalvar3.setText("SALVAR");
        btnSalvar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvar3ActionPerformed(evt);
            }
        });
        btnSalvar3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSalvar3KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFecharTela3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSalvar3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(74, 74, 74)))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnFecharTela3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSalvar3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(87, 87, 87))
        );

        javax.swing.GroupLayout editarSituacaoLayout = new javax.swing.GroupLayout(editarSituacao.getContentPane());
        editarSituacao.getContentPane().setLayout(editarSituacaoLayout);
        editarSituacaoLayout.setHorizontalGroup(
            editarSituacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editarSituacaoLayout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        editarSituacaoLayout.setVerticalGroup(
            editarSituacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editarSituacaoLayout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(250, 250, 250));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel10.setText("INFORMAÇÕES GERAIS");

        jLabel123.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel123.setText("Número da OS *");

        jLabel124.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel124.setText("Cliente *");

        campoCliente.setEditable(false);
        campoCliente.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        campoCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoClienteFocusLost(evt);
            }
        });

        jLabel134.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel134.setText("* Campos Obrigatórios");

        jLabel125.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel125.setText("Placa do Veículo*");

        campoPlaca.setEditable(false);
        try {
            campoPlaca.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("UUU-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        campoNomeMotorista.setEditable(false);
        campoNomeMotorista.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        campoNomeMotorista.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoNomeMotoristaFocusLost(evt);
            }
        });

        jLabel126.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel126.setText("Nome do Motorista *");

        jLabel127.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel127.setText("CPF do Motorista *");

        campoCPF.setEditable(false);
        try {
            campoCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jFormattedTextField1.setEditable(false);
        try {
            jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextField1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        campoData.setEditable(false);
        try {
            campoData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel153.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel153.setText("Data *");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel134, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel123, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel124, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel125, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campoNomeMotorista, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel126, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campoCPF)
                            .addComponent(jLabel127))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoData, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                            .addComponent(jLabel153, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(27, 27, 27))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel123)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(campoPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel125)
                                .addComponent(jLabel126)
                                .addComponent(jLabel127)
                                .addComponent(jLabel153))
                            .addGap(27, 27, 27))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel124)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(campoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(campoNomeMotorista, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(campoCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(campoData, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(29, 29, 29)
                .addComponent(jLabel134)
                .addGap(106, 106, 106))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel1.setText("ACOMPANHAMENTO DA ORDEM DE SERVIÇO");

        btnFecharTela1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnFecharTela1.setText("FECHAR");
        btnFecharTela1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharTela1ActionPerformed(evt);
            }
        });
        btnFecharTela1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnFecharTela1KeyPressed(evt);
            }
        });

        btnSalvar1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSalvar1.setText("SALVAR");
        btnSalvar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvar1ActionPerformed(evt);
            }
        });
        btnSalvar1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSalvar1KeyPressed(evt);
            }
        });

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        painel1.setBackground(new java.awt.Color(250, 250, 250));
        painel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        painel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel128.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel128.setText("Descrição");

        campoDescricao1.setEditable(false);
        campoDescricao1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        tabelaArquivosS1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tabelaArquivosS1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pendência", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaArquivosS1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabelaArquivosS1);
        if (tabelaArquivosS1.getColumnModel().getColumnCount() > 0) {
            tabelaArquivosS1.getColumnModel().getColumn(0).setResizable(false);
            tabelaArquivosS1.getColumnModel().getColumn(0).setPreferredWidth(250);
            tabelaArquivosS1.getColumnModel().getColumn(1).setResizable(false);
            tabelaArquivosS1.getColumnModel().getColumn(1).setPreferredWidth(100);
        }

        jLabel129.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel129.setText("Arquivos");

        jLabel130.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel130.setText("Data");

        campoData1.setEditable(false);
        try {
            campoData1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoData1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        campoStatus1.setEditable(false);
        campoStatus1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel131.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel131.setText("Status:");

        btnConclur1.setBackground(new java.awt.Color(204, 204, 204));
        btnConclur1.setText("CONCLUIR");
        btnConclur1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConclur1ActionPerformed(evt);
            }
        });
        btnConclur1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnConclur1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout painel1Layout = new javax.swing.GroupLayout(painel1);
        painel1.setLayout(painel1Layout);
        painel1Layout.setHorizontalGroup(
            painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel129, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(painel1Layout.createSequentialGroup()
                            .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel128, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(painel1Layout.createSequentialGroup()
                                    .addComponent(jLabel131, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(campoStatus1))
                                .addComponent(campoDescricao1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(campoData1)
                                .addComponent(jLabel130, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnConclur1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        painel1Layout.setVerticalGroup(
            painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel130, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel128, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campoData1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoDescricao1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel131)
                    .addComponent(campoStatus1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConclur1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel129)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("SITUAÇÃO 1", painel1);

        painel2.setBackground(new java.awt.Color(250, 250, 250));
        painel2.setDoubleBuffered(false);
        painel2.setEnabled(false);

        campoDescricao2.setEditable(false);
        campoDescricao2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel132.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel132.setText("Descrição");

        jLabel133.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel133.setText("Data");

        campoData2.setEditable(false);
        try {
            campoData2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoData2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btnConclur2.setBackground(new java.awt.Color(204, 204, 204));
        btnConclur2.setText("CONCLUIR");
        btnConclur2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConclur2ActionPerformed(evt);
            }
        });
        btnConclur2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnConclur2KeyPressed(evt);
            }
        });

        campoStatus2.setEditable(false);
        campoStatus2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel135.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel135.setText("Status:");

        jLabel136.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel136.setText("Arquivos");

        tabelaArquivosS2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tabelaArquivosS2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pendência", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaArquivosS2.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tabelaArquivosS2);
        if (tabelaArquivosS2.getColumnModel().getColumnCount() > 0) {
            tabelaArquivosS2.getColumnModel().getColumn(0).setResizable(false);
            tabelaArquivosS2.getColumnModel().getColumn(0).setPreferredWidth(250);
            tabelaArquivosS2.getColumnModel().getColumn(1).setResizable(false);
            tabelaArquivosS2.getColumnModel().getColumn(1).setPreferredWidth(100);
        }

        javax.swing.GroupLayout painel2Layout = new javax.swing.GroupLayout(painel2);
        painel2.setLayout(painel2Layout);
        painel2Layout.setHorizontalGroup(
            painel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(painel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel136, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(painel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(painel2Layout.createSequentialGroup()
                            .addGroup(painel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel132, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(painel2Layout.createSequentialGroup()
                                    .addComponent(jLabel135, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(campoStatus2))
                                .addComponent(campoDescricao2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(painel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(campoData2)
                                .addComponent(jLabel133, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnConclur2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        painel2Layout.setVerticalGroup(
            painel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel133, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel132, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campoData2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoDescricao2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel135)
                    .addComponent(campoStatus2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConclur2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel136)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("SITUAÇÃO 2", painel2);

        painel3.setBackground(new java.awt.Color(250, 250, 250));

        campoDescricao3.setEditable(false);
        campoDescricao3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel141.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel141.setText("Descrição");

        jLabel142.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel142.setText("Data");

        campoData3.setEditable(false);
        try {
            campoData3.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoData3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btnConcluir3.setBackground(new java.awt.Color(204, 204, 204));
        btnConcluir3.setText("CONCLUIR");
        btnConcluir3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConcluir3ActionPerformed(evt);
            }
        });
        btnConcluir3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnConcluir3KeyPressed(evt);
            }
        });

        campoStatus3.setEditable(false);
        campoStatus3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel143.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel143.setText("Status:");

        jLabel144.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel144.setText("Arquivos");

        tabelaArquivosS3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tabelaArquivosS3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pendência", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaArquivosS3.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(tabelaArquivosS3);
        if (tabelaArquivosS3.getColumnModel().getColumnCount() > 0) {
            tabelaArquivosS3.getColumnModel().getColumn(0).setResizable(false);
            tabelaArquivosS3.getColumnModel().getColumn(0).setPreferredWidth(250);
            tabelaArquivosS3.getColumnModel().getColumn(1).setResizable(false);
            tabelaArquivosS3.getColumnModel().getColumn(1).setPreferredWidth(100);
        }

        javax.swing.GroupLayout painel3Layout = new javax.swing.GroupLayout(painel3);
        painel3.setLayout(painel3Layout);
        painel3Layout.setHorizontalGroup(
            painel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(painel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel144, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(painel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(painel3Layout.createSequentialGroup()
                            .addGroup(painel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel141, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(painel3Layout.createSequentialGroup()
                                    .addComponent(jLabel143, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(campoStatus3))
                                .addComponent(campoDescricao3, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(painel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(campoData3)
                                .addComponent(jLabel142, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnConcluir3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        painel3Layout.setVerticalGroup(
            painel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel142, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel141, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campoData3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoDescricao3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel143)
                    .addComponent(campoStatus3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConcluir3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel144)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("SITUAÇÃO 3", painel3);

        painel4.setBackground(new java.awt.Color(250, 250, 250));
        painel4.setEnabled(false);

        campoDescricao4.setEditable(false);
        campoDescricao4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel137.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel137.setText("Descrição");

        jLabel138.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel138.setText("Data");

        campoData4.setEditable(false);
        try {
            campoData4.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoData4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btnConcluir4.setBackground(new java.awt.Color(204, 204, 204));
        btnConcluir4.setText("CONCLUIR");
        btnConcluir4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConcluir4ActionPerformed(evt);
            }
        });
        btnConcluir4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnConcluir4KeyPressed(evt);
            }
        });

        campoStatus4.setEditable(false);
        campoStatus4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel139.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel139.setText("Status:");

        jLabel140.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel140.setText("Arquivos");

        tabelaArquivosS4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tabelaArquivosS4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pendência", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaArquivosS4.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(tabelaArquivosS4);
        if (tabelaArquivosS4.getColumnModel().getColumnCount() > 0) {
            tabelaArquivosS4.getColumnModel().getColumn(0).setResizable(false);
            tabelaArquivosS4.getColumnModel().getColumn(0).setPreferredWidth(250);
            tabelaArquivosS4.getColumnModel().getColumn(1).setResizable(false);
            tabelaArquivosS4.getColumnModel().getColumn(1).setPreferredWidth(100);
        }

        javax.swing.GroupLayout painel4Layout = new javax.swing.GroupLayout(painel4);
        painel4.setLayout(painel4Layout);
        painel4Layout.setHorizontalGroup(
            painel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel4Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(painel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel140, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(painel4Layout.createSequentialGroup()
                        .addGroup(painel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel137, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(painel4Layout.createSequentialGroup()
                                .addComponent(jLabel139, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoStatus4, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(campoDescricao4, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(painel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campoData4, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel138, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnConcluir4, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        painel4Layout.setVerticalGroup(
            painel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel138, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel137, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campoData4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoDescricao4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel139)
                    .addComponent(campoStatus4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConcluir4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel140)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("SITUAÇÃO 4", painel4);

        jLabel147.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel147.setText("Descrição");

        campoDescricao5.setEditable(false);
        campoDescricao5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        campoData5.setEditable(false);
        try {
            campoData5.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoData5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel149.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel149.setText("Data");

        btnConcluir5.setBackground(new java.awt.Color(204, 204, 204));
        btnConcluir5.setText("CONCLUIR");
        btnConcluir5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConcluir5ActionPerformed(evt);
            }
        });
        btnConcluir5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnConcluir5KeyPressed(evt);
            }
        });

        campoStatus5.setEditable(false);
        campoStatus5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel150.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel150.setText("Status:");

        jLabel151.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel151.setText("Arquivos");

        tabelaArquivosS5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tabelaArquivosS5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pendência", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaArquivosS5.getTableHeader().setReorderingAllowed(false);
        jScrollPane7.setViewportView(tabelaArquivosS5);
        if (tabelaArquivosS5.getColumnModel().getColumnCount() > 0) {
            tabelaArquivosS5.getColumnModel().getColumn(0).setResizable(false);
            tabelaArquivosS5.getColumnModel().getColumn(0).setPreferredWidth(250);
            tabelaArquivosS5.getColumnModel().getColumn(1).setResizable(false);
            tabelaArquivosS5.getColumnModel().getColumn(1).setPreferredWidth(100);
        }

        javax.swing.GroupLayout painel5Layout = new javax.swing.GroupLayout(painel5);
        painel5.setLayout(painel5Layout);
        painel5Layout.setHorizontalGroup(
            painel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel5Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(painel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel151, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(painel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(painel5Layout.createSequentialGroup()
                            .addGroup(painel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel147, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(painel5Layout.createSequentialGroup()
                                    .addComponent(jLabel150, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(campoStatus5))
                                .addComponent(campoDescricao5, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(painel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(campoData5)
                                .addComponent(jLabel149, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnConcluir5, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        painel5Layout.setVerticalGroup(
            painel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel149, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel147, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campoData5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoDescricao5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel150)
                    .addComponent(campoStatus5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConcluir5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel151)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("SITUAÇÃO 5", painel5);

        jPanel3.setBackground(new java.awt.Color(250, 250, 250));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnCriar.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnCriar.setText("ADICIONAR SITUAÇÃO");
        btnCriar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCriarActionPerformed(evt);
            }
        });
        btnCriar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCriarKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("CONTROLES");

        btnConcluirOS.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnConcluirOS.setText("CONCLUIR OS");
        btnConcluirOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConcluirOSActionPerformed(evt);
            }
        });
        btnConcluirOS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnConcluirOSKeyPressed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnEditar.setText("EDITAR SITUAÇÃO");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        btnEditar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnEditarKeyPressed(evt);
            }
        });

        btnExcluir.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnExcluir.setText("EXCLUIR SITUAÇÃO");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        btnExcluir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnExcluirKeyPressed(evt);
            }
        });

        btnConcluirS.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnConcluirS.setText("CONCLUIR SITUAÇÃO");
        btnConcluirS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConcluirSActionPerformed(evt);
            }
        });
        btnConcluirS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnConcluirSKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnConcluirS, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConcluirOS, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCriar, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnConcluirOS)
                .addGap(18, 18, 18)
                .addComponent(btnConcluirS)
                .addGap(18, 18, 18)
                .addComponent(btnCriar)
                .addGap(18, 18, 18)
                .addComponent(btnEditar)
                .addGap(18, 18, 18)
                .addComponent(btnExcluir)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(250, 250, 250));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel6.setLayout(null);

        tabelaArquivos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tabelaArquivos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Descrição"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaArquivos.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tabelaArquivos);
        if (tabelaArquivos.getColumnModel().getColumnCount() > 0) {
            tabelaArquivos.getColumnModel().getColumn(0).setResizable(false);
            tabelaArquivos.getColumnModel().getColumn(0).setPreferredWidth(50);
            tabelaArquivos.getColumnModel().getColumn(1).setResizable(false);
            tabelaArquivos.getColumnModel().getColumn(1).setPreferredWidth(250);
        }

        jPanel6.add(jScrollPane2);
        jScrollPane2.setBounds(30, 50, 270, 200);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("ARQUIVOS DA ORDEM DE SERVIÇO");
        jPanel6.add(jLabel3);
        jLabel3.setBounds(40, 20, 250, 20);

        removerArquivoOS.setText("EDITAR ARQUIVOS");
        removerArquivoOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerArquivoOSActionPerformed(evt);
            }
        });
        removerArquivoOS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                removerArquivoOSKeyPressed(evt);
            }
        });
        jPanel6.add(removerArquivoOS);
        removerArquivoOS.setBounds(170, 260, 130, 21);

        jLabel152.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel152.setText("STATUS DA OS");

        campoStatus.setEditable(false);
        campoStatus.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        campoStatus.setForeground(new java.awt.Color(0, 153, 0));
        campoStatus.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        campoStatus.setText("ABERTA");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(18, 18, 18)
                            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                            .addComponent(btnFecharTela1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(btnSalvar1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addGap(79, 79, 79)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(campoStatus)
                                        .addComponent(jLabel152, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(556, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel152)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnFecharTela1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSalvar1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1))
                .addContainerGap(1450, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(172, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(870, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void campoClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoClienteFocusLost
        if(campoCliente.getText().equals("")){
            getListaRequisitos().get(1).setIsOk(false);
        } else {
            getListaRequisitos().get(1).setIsOk(true);
        }
    }//GEN-LAST:event_campoClienteFocusLost

    private void btnFecharTela1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharTela1ActionPerformed
//        fechaCadastroCliente();
    }//GEN-LAST:event_btnFecharTela1ActionPerformed

    private void btnFecharTela1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnFecharTela1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
//            fechaCadastroCliente();
        }
    }//GEN-LAST:event_btnFecharTela1KeyPressed

    private void btnSalvar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvar1ActionPerformed
        atualizaOS();
    }//GEN-LAST:event_btnSalvar1ActionPerformed

    private void btnSalvar1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSalvar1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            atualizaOS();
        }
    }//GEN-LAST:event_btnSalvar1KeyPressed

    private void campoNomeMotoristaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoNomeMotoristaFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_campoNomeMotoristaFocusLost

    private void btnCriarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCriarActionPerformed
        adicionaSituacaoOS();
    }//GEN-LAST:event_btnCriarActionPerformed

    private void btnCriarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCriarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            adicionaSituacaoOS();
        }
    }//GEN-LAST:event_btnCriarKeyPressed

    private void btnConcluirOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConcluirOSActionPerformed
        concluirOS();
    }//GEN-LAST:event_btnConcluirOSActionPerformed

    private void btnConcluirOSKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnConcluirOSKeyPressed
       if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
           concluirOS();
       }
    }//GEN-LAST:event_btnConcluirOSKeyPressed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        editaSituacaoOS();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEditarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnEditarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            editaSituacaoOS();
        }
    }//GEN-LAST:event_btnEditarKeyPressed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        excluirSituacaoOS();
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnExcluirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnExcluirKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            excluirSituacaoOS();
        }
    }//GEN-LAST:event_btnExcluirKeyPressed

    private void btnConcluirSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConcluirSActionPerformed
        concluirSituacao();
    }//GEN-LAST:event_btnConcluirSActionPerformed

    private void btnConcluirSKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnConcluirSKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            concluirSituacao();
        }
    }//GEN-LAST:event_btnConcluirSKeyPressed

    private void selecionarArquivoCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecionarArquivoCActionPerformed
        procuraArquivo();
    }//GEN-LAST:event_selecionarArquivoCActionPerformed

    private void selecionarArquivoCKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_selecionarArquivoCKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            procuraArquivo();
        }
    }//GEN-LAST:event_selecionarArquivoCKeyPressed

    private void adicionarArquivoCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarArquivoCActionPerformed
        adicionaArquivo();
    }//GEN-LAST:event_adicionarArquivoCActionPerformed

    private void adicionarArquivoCKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_adicionarArquivoCKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            adicionaArquivo();
        }
    }//GEN-LAST:event_adicionarArquivoCKeyPressed

    private void btnFecharTela2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharTela2ActionPerformed
        fechaCriacaoSituacao();
    }//GEN-LAST:event_btnFecharTela2ActionPerformed

    private void btnFecharTela2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnFecharTela2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            fechaCriacaoSituacao();
        }
    }//GEN-LAST:event_btnFecharTela2KeyPressed

    private void btnSalvar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvar2ActionPerformed
        salvaSituacaoOS();
    }//GEN-LAST:event_btnSalvar2ActionPerformed

    private void btnSalvar2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSalvar2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            salvaSituacaoOS();
        }
    }//GEN-LAST:event_btnSalvar2KeyPressed

    private void btnConclur1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConclur1ActionPerformed
        concluirSituacao();
    }//GEN-LAST:event_btnConclur1ActionPerformed

    private void btnConclur1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnConclur1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            concluirSituacao();
        }
    }//GEN-LAST:event_btnConclur1KeyPressed

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    private void jDialog1WindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jDialog1WindowClosed
        this.setEnabled(true);
        this.toFront();
    }//GEN-LAST:event_jDialog1WindowClosed

    private void btnRemoveArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveArquivoActionPerformed
        removeArquivo();
    }//GEN-LAST:event_btnRemoveArquivoActionPerformed

    private void removerArquivoOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerArquivoOSActionPerformed
        editarArquivosOS();
    }//GEN-LAST:event_removerArquivoOSActionPerformed

    private void removerArquivoOSKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_removerArquivoOSKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            editarArquivosOS();
        }
    }//GEN-LAST:event_removerArquivoOSKeyPressed

    private void selecionarArquivoC1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecionarArquivoC1ActionPerformed
        procuraArquivo2();
    }//GEN-LAST:event_selecionarArquivoC1ActionPerformed

    private void selecionarArquivoC1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_selecionarArquivoC1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            procuraArquivo2();
        }
    }//GEN-LAST:event_selecionarArquivoC1KeyPressed

    private void adicionarArquivoC1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarArquivoC1ActionPerformed
        adicionaArquivo2();
    }//GEN-LAST:event_adicionarArquivoC1ActionPerformed

    private void adicionarArquivoC1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_adicionarArquivoC1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            adicionaArquivo2();
        }
    }//GEN-LAST:event_adicionarArquivoC1KeyPressed

    private void btnRemoveArquivo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveArquivo1ActionPerformed
        removeArquivo2();
    }//GEN-LAST:event_btnRemoveArquivo1ActionPerformed

    private void btnFecharTela3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharTela3ActionPerformed
        fechaEdicaoSituacao();
    }//GEN-LAST:event_btnFecharTela3ActionPerformed

    private void btnFecharTela3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnFecharTela3KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            fechaEdicaoSituacao();
        }
    }//GEN-LAST:event_btnFecharTela3KeyPressed

    private void btnSalvar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvar3ActionPerformed
        salvaEdicaoSituacaoOS();
    }//GEN-LAST:event_btnSalvar3ActionPerformed

    private void btnSalvar3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSalvar3KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            salvaEdicaoSituacaoOS();
        }
    }//GEN-LAST:event_btnSalvar3KeyPressed

    private void btnRemoveArquivoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnRemoveArquivoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            removeArquivo();
        }
    }//GEN-LAST:event_btnRemoveArquivoKeyPressed

    private void btnRemoveArquivo1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnRemoveArquivo1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            removeArquivo2();
        }
    }//GEN-LAST:event_btnRemoveArquivo1KeyPressed

    private void btnConclur2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConclur2ActionPerformed
        concluirSituacao();
    }//GEN-LAST:event_btnConclur2ActionPerformed

    private void btnConclur2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnConclur2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            concluirSituacao();
        }
    }//GEN-LAST:event_btnConclur2KeyPressed

    private void btnConcluir3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConcluir3ActionPerformed
        concluirSituacao();
    }//GEN-LAST:event_btnConcluir3ActionPerformed

    private void btnConcluir3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnConcluir3KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            concluirSituacao();
        }
    }//GEN-LAST:event_btnConcluir3KeyPressed

    private void btnConcluir4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConcluir4ActionPerformed
        concluirSituacao();
    }//GEN-LAST:event_btnConcluir4ActionPerformed

    private void btnConcluir4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnConcluir4KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            concluirSituacao();
        }
    }//GEN-LAST:event_btnConcluir4KeyPressed

    private void btnConcluir5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnConcluir5KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            concluirSituacao();
        }
    }//GEN-LAST:event_btnConcluir5KeyPressed

    private void btnConcluir5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConcluir5ActionPerformed
        concluirSituacao();
    }//GEN-LAST:event_btnConcluir5ActionPerformed

    private void setagemInicial(){
        listaRequisitos = new ArrayList();
        listaRequisitos.add(new Requisito("Número da OS",true));
        listaRequisitos.add(new Requisito("Cliente",true));
        listaRequisitos.add(new Requisito("Placa do Veículo",true));
        listaRequisitos.add(new Requisito("Nome do Motorista",true));
        listaRequisitos.add(new Requisito("CPF do Motorista",true));
        
        jFormattedTextField1.setText(getOsAux().getNumOS());
        campoCliente.setText(buscaCliente(getOsAux().getDocCliente()));
        campoPlaca.setText(getOsAux().getVeiculoPlaca());
        campoNomeMotorista.setText(getOsAux().getNomeMotorista());
        campoCPF.setText(getOsAux().getCPFMotorista());
        campoData.setText(getOsAux().getData());
        
        DefaultTableModel modeloAux = (DefaultTableModel) tabelaArquivos.getModel();
        Iterator<Arquivo> iteradorArquivos = getOsAux().getListaArquivos().iterator();
        Arquivo arquivoAux;
        int index  = 0;
        while(iteradorArquivos.hasNext()){
            arquivoAux = iteradorArquivos.next();
            modeloAux.addRow(new Object[]{index+1, arquivoAux.getDescricao()});
            index++;
        }
        int i = getOsAux().getListaSituacao().size();
        
        if (i != 0){
            String descricao = getOsAux().getListaSituacao().get(0).getDescricao();
            String data = getOsAux().getListaSituacao().get(0).getData();
            String status = getOsAux().getListaSituacao().get(0).getStatus();
            Iterator<Arquivo> iteradorArquivosS = getOsAux().getListaSituacao().get(0).getListaArquivos().iterator();

            campoDescricao1.setText(descricao);
            campoData1.setText(data);
            campoStatus1.setText(status);
            
            if (status.equals("")){
                btnConclur1.setEnabled(false);
            }
            
            Arquivo arquivoS;
            int j = 1;
            while (iteradorArquivosS.hasNext()){
                arquivoS = iteradorArquivosS.next();
                DefaultTableModel modeloAuxA = (DefaultTableModel) tabelaArquivosS1.getModel();
                modeloAuxA.addRow(new Object[]{j,arquivoS.getDescricao(),arquivoS.getData()});
                j++;
            }
            i--;
            if(i != 0){
                carregaSituacao2(i);
            }
        }
    }
    
    private void carregaSituacao2(int i){
        if (i != 0){
            String descricao = getOsAux().getListaSituacao().get(1).getDescricao();
            String data = getOsAux().getListaSituacao().get(1).getData();
            String status = getOsAux().getListaSituacao().get(1).getStatus();
            Iterator<Arquivo> iteradorArquivosS = getOsAux().getListaSituacao().get(1).getListaArquivos().iterator();

            campoDescricao2.setText(descricao);
            campoData2.setText(data);
            campoStatus2.setText(status);
            
            if (status.equals("")){
                btnConclur2.setEnabled(false);
            }
            
            Arquivo arquivoS;
            int j = 1;
            while (iteradorArquivosS.hasNext()){
                arquivoS = iteradorArquivosS.next();
                DefaultTableModel modeloAuxA = (DefaultTableModel) tabelaArquivosS2.getModel();
                modeloAuxA.addRow(new Object[]{j,arquivoS.getDescricao(),arquivoS.getData()});
                j++;
            }
            i--;
            if(i != 0){
                carregaSituacao3(i);
            }
        }
    }
    
    private void carregaSituacao3(int i){
        if (i != 0){
            String descricao = getOsAux().getListaSituacao().get(2).getDescricao();
            String data = getOsAux().getListaSituacao().get(2).getData();
            String status = getOsAux().getListaSituacao().get(2).getStatus();
            Iterator<Arquivo> iteradorArquivosS = getOsAux().getListaSituacao().get(2).getListaArquivos().iterator();

            campoDescricao3.setText(descricao);
            campoData3.setText(data);
            campoStatus3.setText(status);
            
            if (status.equals("")){
                btnConcluir3.setEnabled(false);
            }
            
            Arquivo arquivoS;
            int j = 1;
            while (iteradorArquivosS.hasNext()){
                arquivoS = iteradorArquivosS.next();
                DefaultTableModel modeloAuxA = (DefaultTableModel) tabelaArquivosS3.getModel();
                modeloAuxA.addRow(new Object[]{j,arquivoS.getDescricao(),arquivoS.getData()});
                j++;
            }
            i--;
            if(i != 0){
                carregaSituacao4(i);
            }
        }
    }
    
    private void carregaSituacao4(int i){
        if (i != 0){
            String descricao = getOsAux().getListaSituacao().get(3).getDescricao();
            String data = getOsAux().getListaSituacao().get(3).getData();
            String status = getOsAux().getListaSituacao().get(3).getStatus();
            Iterator<Arquivo> iteradorArquivosS = getOsAux().getListaSituacao().get(3).getListaArquivos().iterator();

            campoDescricao4.setText(descricao);
            campoData4.setText(data);
            campoStatus4.setText(status);
            
            if (status.equals("")){
                btnConcluir4.setEnabled(false);
            }
            
            Arquivo arquivoS;
            int j = 1;
            while (iteradorArquivosS.hasNext()){
                arquivoS = iteradorArquivosS.next();
                DefaultTableModel modeloAuxA = (DefaultTableModel) tabelaArquivosS4.getModel();
                modeloAuxA.addRow(new Object[]{j,arquivoS.getDescricao(),arquivoS.getData()});
                j++;
            }
            i--;
            if(i != 0){
                carregaSituacao5(i);
            }
        }
    }
    
    private void carregaSituacao5(int i){
        if (i != 0){
            String descricao = getOsAux().getListaSituacao().get(4).getDescricao();
            String data = getOsAux().getListaSituacao().get(4).getData();
            String status = getOsAux().getListaSituacao().get(4).getStatus();
            Iterator<Arquivo> iteradorArquivosS = getOsAux().getListaSituacao().get(4).getListaArquivos().iterator();

            campoDescricao5.setText(descricao);
            campoData5.setText(data);
            campoStatus5.setText(status);
            
            if (status.equals("")){
                btnConcluir5.setEnabled(false);
            }
            
            Arquivo arquivoS;
            int j = 1;
            while (iteradorArquivosS.hasNext()){
                arquivoS = iteradorArquivosS.next();
                DefaultTableModel modeloAuxA = (DefaultTableModel) tabelaArquivosS5.getModel();
                modeloAuxA.addRow(new Object[]{j,arquivoS.getDescricao(),arquivoS.getData()});
                j++;
            }
            i--;
        }
    }
    
    private String buscaCliente(String docCliente){
        String retorno = "";
        
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = "SELECT NomeFantasia FROM Cliente WHERE DocCliente = ?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, docCliente);
                ResultSet rs = pst.executeQuery();

                if(rs.next()){
                    retorno = rs.getString("NomeFantasia");
                }
            }
        } catch (SQLException | HeadlessException | ClassNotFoundException e) {
            //JOptionPane.showMessageDialog(null, e);
        }
        
        return retorno;
    }
    
    private void procuraArquivo(){
        criarSituacao.setEnabled(false);
        int returnVal = jFileChooser1.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = jFileChooser1.getSelectedFile();
            campoCaminho.setText(file.getPath());
            criarSituacao.setEnabled(true);
            criarSituacao.toFront();
        } else {
            //System.out.println("File access cancelled by user.");
        }
    }
    
    private void procuraArquivo2(){
        editarSituacao.setEnabled(false);
        int returnVal = jFileChooser1.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = jFileChooser1.getSelectedFile();
            campoCaminho1.setText(file.getPath());
            editarSituacao.setEnabled(true);
            editarSituacao.toFront();
        } else {
            //System.out.println("File access cancelled by user.");
        }
    }
    
    private void editarArquivosOS(){
    
    }
    
    private void concluirSituacao(){
        int index = jTabbedPane1.getSelectedIndex();
        
        switch(index){
            case 0:
                concluirSituacao1();
                break;
            case 1:
                concluirSituacao2();
                break;
            case 2:
                concluirSituacao3();
                break;
            case 3:
                concluirSituacao4();
                break;
            case 4:
                concluirSituacao5();
                break;
        }
    }
    
    private void concluirSituacao1(){
        String message = "Deseja realmente concluir a Situação 1?";
        String title = "Concluir Situação 1";
        int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = SQL_URL.getUrl();
                try (Connection con = DriverManager.getConnection(url)) {
                    String sql = "UPDATE SituacaoOS SET Status = ? WHERE Codigo = ?";
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.setString(1, "CONCLUÍDO");
                    pst.setString(2, getOsAux().getListaSituacao().get(0).getCodigo());

                    ResultSet rs = pst.executeQuery();
                    
                    if(rs.next()){
                        
                    }
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Situação 1 concluída com sucesso.");
                getOsAux().getListaSituacao().get(0).setStatus("CONCLUÍDO");
                painel1.setEnabled(false);
            } catch (HeadlessException | ClassNotFoundException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        if (reply == JOptionPane.NO_OPTION) {

        }
    }
    
    private void concluirSituacao2(){
        String message = "Deseja realmente concluir a Situação 2?";
        String title = "Concluir Situação 2";
        int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = SQL_URL.getUrl();
                try (Connection con = DriverManager.getConnection(url)) {
                    String sql = "UPDATE SituacaoOS SET Status = ? WHERE Codigo = ?";
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.setString(1, "CONCLUÍDO");
                    pst.setString(2, getOsAux().getListaSituacao().get(1).getCodigo());

                    ResultSet rs = pst.executeQuery();
                    
                    if(rs.next()){
                        
                    }
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Situação 2 concluída com sucesso.");
                getOsAux().getListaSituacao().get(1).setStatus("CONCLUÍDO");
                painel2.setEnabled(false);
            } catch (HeadlessException | ClassNotFoundException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        if (reply == JOptionPane.NO_OPTION) {

        }
    }
    
    private void concluirSituacao3(){
        String message = "Deseja realmente concluir a Situação 3?";
        String title = "Concluir Situação 3";
        int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = SQL_URL.getUrl();
                try (Connection con = DriverManager.getConnection(url)) {
                    String sql = "UPDATE SituacaoOS SET Status = ? WHERE Codigo = ?";
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.setString(1, "CONCLUÍDO");
                    pst.setString(2, getOsAux().getListaSituacao().get(2).getCodigo());

                    ResultSet rs = pst.executeQuery();
                    
                    if(rs.next()){
                        
                    }
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Situação 3 concluída com sucesso.");
                getOsAux().getListaSituacao().get(2).setStatus("CONCLUÍDO");
                painel3.setEnabled(false);
            } catch (HeadlessException | ClassNotFoundException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        if (reply == JOptionPane.NO_OPTION) {

        }
    }
    
    private void concluirSituacao4(){
        String message = "Deseja realmente concluir a Situação 4?";
        String title = "Concluir Situação 4";
        int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = SQL_URL.getUrl();
                try (Connection con = DriverManager.getConnection(url)) {
                    String sql = "UPDATE SituacaoOS SET Status = ? WHERE Codigo = ?";
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.setString(1, "CONCLUÍDO");
                    pst.setString(2, getOsAux().getListaSituacao().get(3).getCodigo());

                    ResultSet rs = pst.executeQuery();
                    
                    if(rs.next()){
                        
                    }
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Situação 4 concluída com sucesso.");
                getOsAux().getListaSituacao().get(3).setStatus("CONCLUÍDO");
                painel4.setEnabled(false);
            } catch (HeadlessException | ClassNotFoundException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        if (reply == JOptionPane.NO_OPTION) {

        }
    }
    
    private void concluirSituacao5(){
        String message = "Deseja realmente concluir a Situação 5?";
        String title = "Concluir Situação 5";
        int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = SQL_URL.getUrl();
                try (Connection con = DriverManager.getConnection(url)) {
                    String sql = "UPDATE SituacaoOS SET Status = ? WHERE Codigo = ?";
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.setString(1, "CONCLUÍDO");
                    pst.setString(2, getOsAux().getListaSituacao().get(4).getCodigo());
                    ResultSet rs = pst.executeQuery();
                    
                    if(rs.next()){
                        
                    }
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Situação 5 concluída com sucesso.");
                getOsAux().getListaSituacao().get(4).setStatus("CONCLUÍDO");
                painel5.setEnabled(false);
            } catch (HeadlessException | ClassNotFoundException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        if (reply == JOptionPane.NO_OPTION) {

        }
    }
    
    private void adicionaArquivo(){
        if (campoCaminho.getText().equals("") || campoPendencia.getText().equals("") || cmpoDataStatusArquivo.getText().equals("  /  /    ")){
            String erros = "Os seguintes campos não foram preenchidos:";           
            if (campoCaminho.getText().equals("")){
                erros = erros + " Arquivo,";
            }            
            if(campoPendencia.getText().equals("")){
                erros = erros + " Pendencia,";
            }
            if(cmpoDataStatusArquivo.getText().equals("  /  /    ")){
                erros = erros + " Data,";
            }            
            erros = erros.substring(0, erros.length()-2);            
            JOptionPane.showMessageDialog(null, erros);
        } else {
            Arquivo arquivoAux = new Arquivo(campoPendencia.getText(),campoCaminho.getText());
            arquivoAux.setData(cmpoDataStatusArquivo.getText());
            getSituacaoOSAux().getListaArquivos().add(arquivoAux);
            int index = tabelaArquivosC.getRowCount();
            DefaultTableModel modeloAux = (DefaultTableModel) tabelaArquivosC.getModel();
            modeloAux.addRow(new Object[]{index+1, campoPendencia.getText()});
            campoPendencia.setText("");
            campoCaminho.setText("");
        }
    }
    
    private void adicionaArquivo2(){
        if (campoCaminho1.getText().equals("") || campoPendencia1.getText().equals("") || cmpoDataStatusArquivo1.getText().equals("  /  /    ")){
            String erros = "Os seguintes campos não foram preenchidos:";           
            if (campoCaminho1.getText().equals("")){
                erros = erros + " Arquivo,";
            }            
            if(campoPendencia1.getText().equals("")){
                erros = erros + " Pendencia,";
            }
            if(cmpoDataStatusArquivo1.getText().equals("  /  /    ")){
                erros = erros + " Data,";
            }            
            erros = erros.substring(0, erros.length()-2);            
            JOptionPane.showMessageDialog(null, erros);
        } else {
            Arquivo arquivoAux = new Arquivo(campoPendencia1.getText(),campoCaminho1.getText());
            arquivoAux.setData(cmpoDataStatusArquivo1.getText());
            getSituacaoOSAux().getListaArquivos().add(arquivoAux);
            int index = tabelaArquivosC1.getRowCount();
            DefaultTableModel modeloAux = (DefaultTableModel) tabelaArquivosC1.getModel();
            modeloAux.addRow(new Object[]{index+1, campoPendencia1.getText()});
            campoPendencia1.setText("");
            campoCaminho1.setText("");
        }
    }
    
    private void removeArquivo(){
        if (tabelaArquivosC.getSelectedRow() > -1){
            int index = tabelaArquivosC.getSelectedRow();
            DefaultTableModel modeloAux = (DefaultTableModel) tabelaArquivosC.getModel();
            modeloAux.removeRow(tabelaArquivosC.getSelectedRow());
            getSituacaoOSAux().getListaArquivos().remove(index);
        } else {
            // DO NOTHING
        }
    }
    
    private void adicionaSituacaoOS(){
        setSituacaoOSAux(null);
        setSituacaoOSAux(new SituacaoOS());
        int index = getOsAux().getListaSituacao().size();
        indexSituacao = index;
        criarSituacao.setEnabled(true);
        criarSituacao.toFront();
        this.setEnabled(false);
    }
    
    private void zeraTelaAdicionarSituacao(){
        campoDescricaoC.setText("");
        campoDataC.setText("");
        campoCaminho.setText("");
        campoPendencia.setText("");
        cmpoDataStatusArquivo.setText("");
        DefaultTableModel modeloAux = (DefaultTableModel) tabelaArquivosC.getModel();
        int qtdRows = tabelaArquivosC.getRowCount();
        while (qtdRows > 0){
            modeloAux.removeRow(qtdRows-1);
        }
        situacaoOSAux = null;
    }
    
    private void salvaSituacaoOS(){
        if(campoDescricaoC.getText().equals("") || campoDataC.getText().equals("  /  /    ")){
            String erros = "Os seguintes campos não foram preenchidos:";           
            if (campoDescricaoC.getText().equals("")){
                erros = erros + " Descrição,";
            }            
            if(campoDataC.getText().equals("  /  /    ")){
                erros = erros + " Data,";
            }     
            erros = erros.substring(0, erros.length()-2);            
            JOptionPane.showMessageDialog(null, erros);
        } else {
            int index = getOsAux().getListaSituacao().size();
            switch (index){
                case 0:
                    salvaSituacao1();
                    break;
                case 1:
                    salvaSituacao2();
                    break;
                case 2:
                    salvaSituacao3();
                    break;
                case 3:
                    salvaSituacao4();
                    break;
                case 4:
                    salvaSituacao5();
                    break;  
            }
            getOsAux().getListaSituacao().add(situacaoOSAux);
            situacaoOSAux = null;
            JOptionPane.showMessageDialog(null, "Situação cadastrada com sucesso.");
            zeraTelaAdicionarSituacao();
            criarSituacao.dispose();
            this.setEnabled(true);
            this.toFront();
        }
    }
    
    private void editaSituacaoOS(){
        int index = jTabbedPane1.getSelectedIndex();
        situacaoOSAux = getOsAux().getListaSituacao().get(index);
        setaEdicaoSituacao();
    }
    
    private void setaEdicaoSituacao(){
        Iterator<Arquivo> iteradorArquivosS = situacaoOSAux.getListaArquivos().iterator();
        Arquivo arquivoS;
        while (iteradorArquivosS.hasNext()){
            arquivoS = iteradorArquivosS.next();
            DefaultTableModel modeloAuxA = (DefaultTableModel) tabelaArquivosC1.getModel();
            modeloAuxA.addRow(new Object[]{arquivoS.getDescricao(),arquivoS.getData()});
        }
        editarSituacao.setVisible(true);
        editarSituacao.toFront();
        this.setEnabled(false); 
    }
    
    private void removeArquivo2(){
        if (tabelaArquivosC1.getSelectedRow() > -1){
            int index = tabelaArquivosC1.getSelectedRow();
            DefaultTableModel modeloAux = (DefaultTableModel) tabelaArquivosC1.getModel();
            modeloAux.removeRow(tabelaArquivosC1.getSelectedRow());
            getSituacaoOSAux().getListaArquivos().remove(index);
        } else {
            // DO NOTHING
        }
    }
    
    private void salvaEdicaoSituacaoOS(){
        if(campoDescricaoC1.getText().equals("") || campoDataC1.getText().equals("  /  /    ")){
            String erros = "Os seguintes campos não foram preenchidos:";           
            if (campoDescricaoC1.getText().equals("")){
                erros = erros + " Descrição,";
            }            
            if(campoDataC1.getText().equals("  /  /    ")){
                erros = erros + " Data,";
            }     
            erros = erros.substring(0, erros.length()-2);            
            JOptionPane.showMessageDialog(null, erros);
        } else {
            int index = indexSituacao;
            switch (index){
                case 0:
                    salvaSituacao1();
                    break;
                case 1:
                    salvaSituacao2();
                    break;
                case 2:
                    salvaSituacao3();
                    break;
                case 3:
                    salvaSituacao4();
                    break;
                case 4:
                    salvaSituacao5();
                    break;  
            }
            getOsAux().getListaSituacao().set(indexSituacao, situacaoOSAux);
            situacaoOSAux = null;
            JOptionPane.showMessageDialog(null, "Situação editada com sucesso.");
            zeraTelaEditarSituacao();
            editarSituacao.dispose();
            this.setEnabled(true);
            this.toFront();
        }
    }
    
    private void zeraTelaEditarSituacao(){
        campoDescricaoC1.setText("");
        campoDataC1.setText("");
        campoCaminho1.setText("");
        campoPendencia1.setText("");
        cmpoDataStatusArquivo1.setText("");
        DefaultTableModel modeloAux = (DefaultTableModel) tabelaArquivosC1.getModel();
        int qtdRows = tabelaArquivosC1.getRowCount();
        while (qtdRows > 0){
            modeloAux.removeRow(qtdRows-1);
        }
        situacaoOSAux = null;
    }
    
    private void excluirSituacaoOS(){
        int index = jTabbedPane1.getSelectedIndex();
        String message = "Deseja realmente excluir a Situação "+(index+1)+"?";
        String title = "Excluir Situação "+(index+1);
        int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            getOsAux().getListaSituacao().remove(index);
            switch (index){
                case 0:
                    limpaSituacao1();
                    break;
                case 1:
                    limpaSituacao2();
                    break;
                case 2:
                    limpaSituacao3();
                    break;
                case 3:
                    limpaSituacao4();
                    break;
                case 4:
                    limpaSituacao5();
                    break;
            }
            getOsAux().getListaSituacao().remove(index);
            JOptionPane.showMessageDialog(null, "Situação "+(index+1)+" removido com sucesso.");
        }
        if (reply == JOptionPane.NO_OPTION) {
            
        }
    }
    
    private void fechaEdicaoSituacao(){
        String message = "Deseja realmente cancelar a edição?";
        String title = "Cancelar Edição";
        int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            zeraTelaEditarSituacao();
            editarSituacao.dispose();
            this.setEnabled(true);
            this.toFront();
        }
        if (reply == JOptionPane.NO_OPTION) {
            
        }
    }
    
    private void atualizaOS(){
        deletaArquivos();
        deletaArquivoSituacao();
        deletaSituacao();
        
        salvaSituacoes();
        salvaArquivosOS();
        atualizaOSLets();
    }
    
    private void salvaSituacoes(){
        Iterator<SituacaoOS> iteradorSituacoes = getOsAux().getListaSituacao().iterator();
        SituacaoOS situacaoAux;
        while (iteradorSituacoes.hasNext()){
            situacaoAux = iteradorSituacoes.next();
            Arquivo arquivoAux;
            Iterator<Arquivo> iteradorArquivosS = situacaoAux.getListaArquivos().iterator();
            while(iteradorArquivosS.hasNext()){
                arquivoAux = iteradorArquivosS.next();
                salvaArquivosSituacao(situacaoAux.getCodigo(), arquivoAux);
            }
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = SQL_URL.getUrl();
                try (Connection con = DriverManager.getConnection(url)) {
                    String sql;
                    sql = "INSERT INTO SituacaoOS (Codigo, NumeroOS, Descricao, Data, Status) VALUES (?,?,?,?,?)";
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.setString(1,  situacaoAux.getCodigo());
                    pst.setString(2, situacaoAux.getNumeroOS());
                    pst.setString(3,  situacaoAux.getDescricao());
                    pst.setString(4,  situacaoAux.getData());
                    pst.setString(5,  situacaoAux.getStatus());
                    ResultSet rs = pst.executeQuery();
                    if (rs.next()) {

                    }
                }
            } catch (HeadlessException | ClassNotFoundException | SQLException e) {
                //JOptionPane.showMessageDialog(null, e);
            }
        }
    }
    
    private void salvaArquivosSituacao(String codigoS, Arquivo arquivoAux){
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql;
                sql = "INSERT INTO Arquivo_Situacao (CodigoS, Path, Descricao, Data) VALUES (?,?,?,?)";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1,  codigoS);
                pst.setString(2, arquivoAux.getPath());
                pst.setString(3,  arquivoAux.getDescricao());
                pst.setString(4,  arquivoAux.getData());
                ResultSet rs = pst.executeQuery();
                if (rs.next()) {

                }
            }
        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            //JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void salvaArquivosOS(){
        Iterator<Arquivo> listaArquivos = getOsAux().getListaArquivos().iterator();
        Arquivo arquivoAux;
        while (listaArquivos.hasNext()){
            arquivoAux = listaArquivos.next();
            String numeroOs = jFormattedTextField1.getText();
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = SQL_URL.getUrl();
                try (Connection con = DriverManager.getConnection(url)) {
                    String sql;
                    sql = "INSERT INTO Arquivo_OS (CodigoOS, Path, Descricao) VALUES (?,?,?)";
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.setString(1,  numeroOs);
                    pst.setString(2, arquivoAux.getPath());
                    pst.setString(3,  arquivoAux.getDescricao());
                    ResultSet rs = pst.executeQuery();
                    if (rs.next()) {

                    }
                }
            } catch (HeadlessException | ClassNotFoundException | SQLException e) {
                //JOptionPane.showMessageDialog(null, e);
            }
        }
    }
    
    private void atualizaOSLets(){
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql;
                sql = "UPDATE OrdemServico NumOs, DocCliente, VeiculoPlaca, NomeMotorista, CPFMotorista, Data, Encerrada WHERE NumOs = ?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1,  jFormattedTextField1.getText());
                pst.setString(2, campoCliente.getText());
                pst.setString(3,  campoPlaca.getText());
                pst.setString(4,  campoNomeMotorista.getText());
                pst.setString(5,  campoCPF.getText());
                pst.setString(6,  campoData.getText());
                pst.setString(7,  getOsAux().getStatus());
                pst.setString(8,  getOsAux().getNumOS());
                ResultSet rs = pst.executeQuery();
                if (rs.next()) {

                }
            }
        } catch (SQLException e){
            JOptionPane.showMessageDialog(null, "A Ordem de Serviço "+jFormattedTextField1.getText()+ " foi atualizada com sucesso.");
        } catch (HeadlessException | ClassNotFoundException e) {
            //JOptionPane.showMessageDialog(null, e);
        } 
    }
    
    private void deletaArquivos(){
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = "DELETE FROM Arquivo_OS WHERE CodigoOS = ?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, getOsAux().getNumOS());
                ResultSet rs = pst.executeQuery();
            }
        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            //JOptionPane.showMessageDialog(null, e);
        } 
    }
    
    private void deletaArquivoSituacao(){
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = "DELETE FROM Arquivo_Situacao WHERE CodigoOS IN (SELECT Codigo FROM SituacaoOS WHERE NumeroOS = ?)";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, getOsAux().getNumOS());
                ResultSet rs = pst.executeQuery();
            }
        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            //JOptionPane.showMessageDialog(null, e);
        } 
    }
    
    private void deletaSituacao(){
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = "DELETE FROM SituacaoOS WHERE NumeroOS = ?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, getOsAux().getNumOS());
                ResultSet rs = pst.executeQuery();
            }
        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            //JOptionPane.showMessageDialog(null, e);
        } 
    }
    
    private void concluirOS(){
        String message = "Deseja realmente concluir a OS?";
        String title = "Concluir OS";
        int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            getOsAux().setStatus("ENCERRADA");
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = SQL_URL.getUrl();
                try (Connection con = DriverManager.getConnection(url)) {
                    String sql;
                    sql = "UPDATE OrdemServico SET NumOs = ?, DocCliente = ?, VeiculoPlaca = ?, NomeMotorista = ?, CPFMotorista = ?, Data = ?, Encerrada = ? WHERE NumOS = ?";
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.setString(1, jFormattedTextField1.getText());
                    pst.setString(2, campoCliente.getText());
                    pst.setString(3, campoPlaca.getText());
                    pst.setString(4, campoNomeMotorista.getText());
                    pst.setString(5, campoCPF.getText());
                    pst.setString(6, campoData.getText());
                    pst.setString(7, "S");
                    pst.setString(8, getOsAux().getNumOS());
                    ResultSet rs = pst.executeQuery();
                    if (rs.next()) {

                    }
                }
            } catch(SQLException e){
                campoStatus.setForeground(new java.awt.Color(0, 0, 153));
                campoStatus.setHorizontalAlignment(javax.swing.JTextField.CENTER);
                campoStatus.setText("CONCLUÍDA");
                getOsAux().setStatus("E");
                JOptionPane.showMessageDialog(null, "Ordem de Serviço concluída com sucesso.");
            } catch (HeadlessException | ClassNotFoundException e) {
                //JOptionPane.showMessageDialog(null, e);
            }
        }
        if (reply == JOptionPane.NO_OPTION) {
            
        }
    }
    
    private void fechaCriacaoSituacao(){
        String message = "Deseja realmente cancelar o cadastro?";
        String title = "Cancelar Cadastro";
        int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            zeraTelaAdicionarSituacao();
            criarSituacao.dispose();
            this.setEnabled(true);
            this.toFront();
        }
        if (reply == JOptionPane.NO_OPTION) {
            
        }
    }
    
    private void salvaSituacao1(){
        painel1.setEnabled(true);
        campoDescricao1.setText(getSituacaoOSAux().getDescricao());
        campoData1.setText(getSituacaoOSAux().getData());
        campoStatus1.setText("EM ANDAMENTO");
        Iterator<Arquivo> iteradorArquivos = getSituacaoOSAux().getListaArquivos().iterator();
        Arquivo arquivoAux;
        DefaultTableModel modeloAux = (DefaultTableModel) tabelaArquivosS1.getModel();
        while (iteradorArquivos.hasNext()){
            arquivoAux = iteradorArquivos.next();
            modeloAux.addRow(new Object[]{arquivoAux.getDescricao(), arquivoAux.getData()});
        }
        jTabbedPane1.setSelectedIndex(indexSituacao);
    }
    
    private void salvaSituacao2(){
        painel2.setEnabled(true);
        campoDescricao2.setText(getSituacaoOSAux().getDescricao());
        campoData2.setText(getSituacaoOSAux().getData());
        campoStatus2.setText("EM ANDAMENTO");
        Iterator<Arquivo> iteradorArquivos = getSituacaoOSAux().getListaArquivos().iterator();
        Arquivo arquivoAux;
        DefaultTableModel modeloAux = (DefaultTableModel) tabelaArquivosS2.getModel();
        while (iteradorArquivos.hasNext()){
            arquivoAux = iteradorArquivos.next();
            modeloAux.addRow(new Object[]{arquivoAux.getDescricao(), arquivoAux.getData()});
        }
        jTabbedPane1.setSelectedIndex(indexSituacao);
    }
    
    private void salvaSituacao3(){
        painel3.setEnabled(true);
        campoDescricao3.setText(getSituacaoOSAux().getDescricao());
        campoData3.setText(getSituacaoOSAux().getData());
        campoStatus3.setText("EM ANDAMENTO");
        Iterator<Arquivo> iteradorArquivos = getSituacaoOSAux().getListaArquivos().iterator();
        Arquivo arquivoAux;
        DefaultTableModel modeloAux = (DefaultTableModel) tabelaArquivosS3.getModel();
        while (iteradorArquivos.hasNext()){
            arquivoAux = iteradorArquivos.next();
            modeloAux.addRow(new Object[]{arquivoAux.getDescricao(), arquivoAux.getData()});
        }
        jTabbedPane1.setSelectedIndex(indexSituacao);
    }
    
    private void salvaSituacao4(){
        painel4.setEnabled(true);
        campoDescricao4.setText(getSituacaoOSAux().getDescricao());
        campoData4.setText(getSituacaoOSAux().getData());
        campoStatus4.setText("EM ANDAMENTO");
        Iterator<Arquivo> iteradorArquivos = getSituacaoOSAux().getListaArquivos().iterator();
        Arquivo arquivoAux;
        DefaultTableModel modeloAux = (DefaultTableModel) tabelaArquivosS4.getModel();
        while (iteradorArquivos.hasNext()){
            arquivoAux = iteradorArquivos.next();
            modeloAux.addRow(new Object[]{arquivoAux.getDescricao(), arquivoAux.getData()});
        }
        jTabbedPane1.setSelectedIndex(indexSituacao);
    }
    
    private void salvaSituacao5(){
        painel5.setEnabled(true);
        campoDescricao5.setText(getSituacaoOSAux().getDescricao());
        campoData5.setText(getSituacaoOSAux().getData());
        campoStatus5.setText("EM ANDAMENTO");
        Iterator<Arquivo> iteradorArquivos = getSituacaoOSAux().getListaArquivos().iterator();
        Arquivo arquivoAux;
        DefaultTableModel modeloAux = (DefaultTableModel) tabelaArquivosS5.getModel();
        while (iteradorArquivos.hasNext()){
            arquivoAux = iteradorArquivos.next();
            modeloAux.addRow(new Object[]{arquivoAux.getDescricao(), arquivoAux.getData()});
        }
        jTabbedPane1.setSelectedIndex(indexSituacao);
    }
    
    private void limpaSituacao1(){
        campoDescricao1.setText("");
        campoData1.setText("");
        campoStatus1.setText("");
        int rowCount = tabelaArquivosS4.getRowCount();
        if (rowCount > 0) {
            while (rowCount > 0) {
                ((DefaultTableModel) tabelaArquivosS4.getModel()).removeRow(rowCount - 1);
                rowCount--;
            }
        }
        jTabbedPane1.setSelectedIndex(indexSituacao-1);
        painel1.setEnabled(false);
    }
    
    private void limpaSituacao2(){
        campoDescricao2.setText("");
        campoData2.setText("");
        campoStatus2.setText("");
        int rowCount = tabelaArquivosS4.getRowCount();
        if (rowCount > 0) {
            while (rowCount > 0) {
                ((DefaultTableModel) tabelaArquivosS4.getModel()).removeRow(rowCount - 1);
                rowCount--;
            }
        }
        jTabbedPane1.setSelectedIndex(indexSituacao-1);
        painel2.setEnabled(false);
    }
    
    private void limpaSituacao3(){
        campoDescricao3.setText("");
        campoData3.setText("");
        campoStatus3.setText("");
        int rowCount = tabelaArquivosS4.getRowCount();
        if (rowCount > 0) {
            while (rowCount > 0) {
                ((DefaultTableModel) tabelaArquivosS4.getModel()).removeRow(rowCount - 1);
                rowCount--;
            }
        }
        jTabbedPane1.setSelectedIndex(indexSituacao-1);
        painel3.setEnabled(false);
    }
    
    private void limpaSituacao4(){
        campoDescricao4.setText("");
        campoData4.setText("");
        campoStatus4.setText("");
        int rowCount = tabelaArquivosS4.getRowCount();
        if (rowCount > 0) {
            while (rowCount > 0) {
                ((DefaultTableModel) tabelaArquivosS4.getModel()).removeRow(rowCount - 1);
                rowCount--;
            }
        }
        jTabbedPane1.setSelectedIndex(indexSituacao-1);
        painel4.setEnabled(false);
    }
    
    private void limpaSituacao5(){
        campoDescricao5.setText("");
        campoData5.setText("");
        campoStatus5.setText("");
        int rowCount = tabelaArquivosS5.getRowCount();
        if (rowCount > 0) {
            while (rowCount > 0) {
                ((DefaultTableModel) tabelaArquivosS5.getModel()).removeRow(rowCount - 1);
                rowCount--;
            }
        }
        jTabbedPane1.setSelectedIndex(indexSituacao-1);
        painel5.setEnabled(false);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrdemServicoOP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adicionarArquivoC;
    private javax.swing.JButton adicionarArquivoC1;
    private javax.swing.JButton btnConcluir3;
    private javax.swing.JButton btnConcluir4;
    private javax.swing.JButton btnConcluir5;
    private javax.swing.JButton btnConcluirOS;
    private javax.swing.JButton btnConcluirS;
    private javax.swing.JButton btnConclur1;
    private javax.swing.JButton btnConclur2;
    private javax.swing.JButton btnCriar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnFecharTela1;
    private javax.swing.JButton btnFecharTela2;
    private javax.swing.JButton btnFecharTela3;
    private javax.swing.JButton btnRemoveArquivo;
    private javax.swing.JButton btnRemoveArquivo1;
    private javax.swing.JButton btnSalvar1;
    private javax.swing.JButton btnSalvar2;
    private javax.swing.JButton btnSalvar3;
    private javax.swing.JFormattedTextField campoCPF;
    private javax.swing.JTextField campoCaminho;
    private javax.swing.JTextField campoCaminho1;
    private javax.swing.JTextField campoCliente;
    private javax.swing.JFormattedTextField campoData;
    private javax.swing.JFormattedTextField campoData1;
    private javax.swing.JFormattedTextField campoData2;
    private javax.swing.JFormattedTextField campoData3;
    private javax.swing.JFormattedTextField campoData4;
    private javax.swing.JFormattedTextField campoData5;
    private javax.swing.JFormattedTextField campoDataC;
    private javax.swing.JFormattedTextField campoDataC1;
    private javax.swing.JTextField campoDescricao1;
    private javax.swing.JTextField campoDescricao2;
    private javax.swing.JTextField campoDescricao3;
    private javax.swing.JTextField campoDescricao4;
    private javax.swing.JTextField campoDescricao5;
    private javax.swing.JTextField campoDescricaoC;
    private javax.swing.JTextField campoDescricaoC1;
    private javax.swing.JTextField campoNomeMotorista;
    private javax.swing.JTextField campoPendencia;
    private javax.swing.JTextField campoPendencia1;
    private javax.swing.JFormattedTextField campoPlaca;
    private javax.swing.JTextField campoStatus;
    private javax.swing.JTextField campoStatus1;
    private javax.swing.JTextField campoStatus2;
    private javax.swing.JTextField campoStatus3;
    private javax.swing.JTextField campoStatus4;
    private javax.swing.JTextField campoStatus5;
    private javax.swing.JFormattedTextField cmpoDataStatusArquivo;
    private javax.swing.JFormattedTextField cmpoDataStatusArquivo1;
    private javax.swing.JDialog criarSituacao;
    private javax.swing.JDialog editarSituacao;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel123;
    private javax.swing.JLabel jLabel124;
    private javax.swing.JLabel jLabel125;
    private javax.swing.JLabel jLabel126;
    private javax.swing.JLabel jLabel127;
    private javax.swing.JLabel jLabel128;
    private javax.swing.JLabel jLabel129;
    private javax.swing.JLabel jLabel130;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JLabel jLabel132;
    private javax.swing.JLabel jLabel133;
    private javax.swing.JLabel jLabel134;
    private javax.swing.JLabel jLabel135;
    private javax.swing.JLabel jLabel136;
    private javax.swing.JLabel jLabel137;
    private javax.swing.JLabel jLabel138;
    private javax.swing.JLabel jLabel139;
    private javax.swing.JLabel jLabel140;
    private javax.swing.JLabel jLabel141;
    private javax.swing.JLabel jLabel142;
    private javax.swing.JLabel jLabel143;
    private javax.swing.JLabel jLabel144;
    private javax.swing.JLabel jLabel145;
    private javax.swing.JLabel jLabel146;
    private javax.swing.JLabel jLabel147;
    private javax.swing.JLabel jLabel148;
    private javax.swing.JLabel jLabel149;
    private javax.swing.JLabel jLabel150;
    private javax.swing.JLabel jLabel151;
    private javax.swing.JLabel jLabel152;
    private javax.swing.JLabel jLabel153;
    private javax.swing.JLabel jLabel154;
    private javax.swing.JLabel jLabel155;
    private javax.swing.JLabel jLabel156;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel painel1;
    private javax.swing.JPanel painel2;
    private javax.swing.JPanel painel3;
    private javax.swing.JPanel painel4;
    private javax.swing.JPanel painel5;
    private javax.swing.JButton removerArquivoOS;
    private javax.swing.JButton selecionarArquivoC;
    private javax.swing.JButton selecionarArquivoC1;
    private javax.swing.JTable tabelaArquivos;
    private javax.swing.JTable tabelaArquivosC;
    private javax.swing.JTable tabelaArquivosC1;
    private javax.swing.JTable tabelaArquivosS1;
    private javax.swing.JTable tabelaArquivosS2;
    private javax.swing.JTable tabelaArquivosS3;
    private javax.swing.JTable tabelaArquivosS4;
    private javax.swing.JTable tabelaArquivosS5;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the listaRequisitos
     */
    public ArrayList<Requisito> getListaRequisitos() {
        return listaRequisitos;
    }

    /**
     * @param listaRequisitos the listaRequisitos to set
     */
    public void setListaRequisitos(ArrayList<Requisito> listaRequisitos) {
        this.listaRequisitos = listaRequisitos;
    }

    /**
     * @return the osController
     */
    public OrdemServicoController getOsController() {
        return osController;
    }

    /**
     * @param osController the osController to set
     */
    public void setOsController(OrdemServicoController osController) {
        this.osController = osController;
    }

    /**
     * @return the osAux
     */
    public OrdemServico getOsAux() {
        return osAux;
    }

    /**
     * @param osAux the osAux to set
     */
    public void setOsAux(OrdemServico osAux) {
        this.osAux = osAux;
    }

    /**
     * @return the indexSituacao
     */
    public int getIndexSituacao() {
        return indexSituacao;
    }

    /**
     * @param indexSituacao the indexSituacao to set
     */
    public void setIndexSituacao(int indexSituacao) {
        this.indexSituacao = indexSituacao;
    }

    /**
     * @return the situacaoOSAux
     */
    public SituacaoOS getSituacaoOSAux() {
        return situacaoOSAux;
    }

    /**
     * @param situacaoOSAux the situacaoOSAux to set
     */
    public void setSituacaoOSAux(SituacaoOS situacaoOSAux) {
        this.situacaoOSAux = situacaoOSAux;
    }
}
