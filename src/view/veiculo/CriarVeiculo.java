/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.veiculo;

import controller.VeiculoController;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import model.Requisito;
import util.SQL_URL;

/**
 *
 * @author KLEYN
 */
public class CriarVeiculo extends javax.swing.JFrame {
    
    private VeiculoController veiculoController = null;
    private ArrayList<Requisito> listaRequisitos = null;
    
    /**
     * Creates new form CriarVeiculo
     * @param veiculoController
     */
    public CriarVeiculo(VeiculoController veiculoController) {
        this.veiculoController = veiculoController;
        this.listaRequisitos = new ArrayList();
        initComponents();
        this.setVisible(true);
        this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);
        this.toFront();
        setagemInicial();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel122 = new javax.swing.JLabel();
        campoPlaca = new javax.swing.JFormattedTextField();
        jLabel123 = new javax.swing.JLabel();
        campoMarca = new javax.swing.JTextField();
        jLabel124 = new javax.swing.JLabel();
        campoModelo = new javax.swing.JTextField();
        jLabel125 = new javax.swing.JLabel();
        comboBoxPais = new javax.swing.JComboBox<>();
        jLabel126 = new javax.swing.JLabel();
        campoAno = new javax.swing.JFormattedTextField();
        jLabel127 = new javax.swing.JLabel();
        campoRenavam = new javax.swing.JFormattedTextField();
        jLabel128 = new javax.swing.JLabel();
        camponEixos = new javax.swing.JFormattedTextField();
        jLabel154 = new javax.swing.JLabel();
        jLabel155 = new javax.swing.JLabel();
        jLabel156 = new javax.swing.JLabel();
        campoCor = new javax.swing.JTextField();
        jLabelPlaca = new javax.swing.JLabel();
        jLabelRenavam = new javax.swing.JLabel();
        jLabelChassi = new javax.swing.JLabel();
        jLabelNMotor = new javax.swing.JLabel();
        jLabel134 = new javax.swing.JLabel();
        campoChassi = new javax.swing.JFormattedTextField();
        campoNMotor = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        btnFecharTela1 = new javax.swing.JButton();
        btnSalvar1 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaCaract = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        campoCaract = new javax.swing.JTextField();
        btnAdicionaCaract = new javax.swing.JButton();
        btnRemoveCaract = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel10.setText("INFORMAÇÕES GERAIS");

        jLabel122.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel122.setText("Placa *");

        try {
            campoPlaca.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("UUU-#A##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoPlaca.setToolTipText("");
        campoPlaca.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel123.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel123.setText("Marca *");

        campoMarca.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        campoMarca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoMarcaFocusLost(evt);
            }
        });

        jLabel124.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel124.setText("Modelo *");

        campoModelo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        campoModelo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoModeloFocusLost(evt);
            }
        });

        jLabel125.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel125.setText("País *");

        comboBoxPais.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Afeganistão", "África do Sul", "Akrotiri", "Albânia", "Alemanha", "Andorra", "Angola", "Anguila", "Antárctida", "Antígua e Barbuda", "Arábia Saudita", "Arctic Ocean", "Argélia", "Argentina", "Arménia", "Aruba", "Ashmore and Cartier Islands", "Atlantic Ocean", "Austrália", "Áustria", "Azerbaijão", "Baamas", "Bangladeche", "Barbados", "Barém", "Bélgica", "Belize", "Benim", "Bermudas", "Bielorrússia", "Birmânia", "Bolívia", "Bósnia e Herzegovina", "Botsuana", "Brasil", "Brunei", "Bulgária", "Burquina Faso", "Burúndi", "Butão", "Cabo Verde", "Camarões", "Camboja", "Canadá", "Catar", "Cazaquistão", "Chade", "Chile", "China", "Chipre", "Clipperton Island", "Colômbia", "Comores", "Congo-Brazzaville", "Congo-Kinshasa", "Coral Sea Islands", "Coreia do Norte", "Coreia do Sul", "Costa do Marfim", "Costa Rica", "Croácia", "Cuba", "Curacao", "Dhekelia", "Dinamarca", "Domínica", "Egipto", "Emiratos Árabes Unidos", "Equador", "Eritreia", "Eslováquia", "Eslovénia", "Espanha", "Estados Unidos", "Estónia", "Etiópia", "Faroé", "Fiji", "Filipinas", "Finlândia", "França", "Gabão", "Gâmbia", "Gana", "Gaza Strip", "Geórgia", "Geórgia do Sul e Sandwich do Sul", "Gibraltar", "Granada", "Grécia", "Gronelândia", "Guame", "Guatemala", "Guernsey", "Guiana", "Guiné", "Guiné Equatorial", "Guiné-Bissau", "Haiti", "Honduras", "Hong Kong", "Hungria", "Iémen", "Ilha Bouvet", "Ilha do Natal", "Ilha Norfolk", "Ilhas Caimão", "Ilhas Cook", "Ilhas dos Cocos", "Ilhas Falkland", "Ilhas Heard e McDonald", "Ilhas Marshall", "Ilhas Salomão", "Ilhas Turcas e Caicos", "Ilhas Virgens Americanas", "Ilhas Virgens Britânicas", "Índia", "Indian Ocean", "Indonésia", "Irão", "Iraque", "Irlanda", "Islândia", "Israel", "Itália", "Jamaica", "Jan Mayen", "Japão", "Jersey", "Jibuti", "Jordânia", "Kosovo", "Kuwait", "Laos", "Lesoto", "Letónia", "Líbano", "Libéria", "Líbia", "Listenstaine", "Lituânia", "Luxemburgo", "Macau", "Macedónia", "Madagáscar", "Malásia", "Malávi", "Maldivas", "Mali", "Malta", "Man Isle of", "Marianas do Norte", "Marrocos", "Maurícia", "Mauritânia", "México", "Micronésia", "Moçambique", "Moldávia", "Mónaco", "Mongólia", "Monserrate", "Montenegro", "Mundo", "Namíbia", "Nauru", "Navassa Island", "Nepal", "Nicarágua", "Níger", "Nigéria", "Niue", "Noruega", "Nova Caledónia", "Nova Zelândia", "Omã", "Pacific Ocean", "Países Baixos", "Palau", "Panamá", "Papua-Nova Guiné", "Paquistão", "Paracel Islands", "Paraguai", "Peru", "Pitcairn", "Polinésia Francesa", "Polónia", "Porto Rico", "Portugal", "Quénia", "Quirguizistão", "Quiribáti", "Reino Unido", "República Centro-Africana", "República Dominicana", "Roménia", "Ruanda", "Rússia", "Salvador", "Samoa", "Samoa Americana", "Santa Helena", "Santa Lúcia", "São Bartolomeu", "São Cristóvão e Neves", "São Marinho", "São Martinho", "São Pedro e Miquelon", "São Tomé e Príncipe", "São Vicente e Granadinas", "Sara Ocidental", "Seicheles", "Senegal", "Serra Leoa", "Sérvia", "Singapura", "Sint Maarten", "Síria", "Somália", "Southern Ocean", "Spratly Islands", "Sri Lanca", "Suazilândia", "Sudão", "Sudão do Sul", "Suécia", "Suíça", "Suriname", "Svalbard e Jan Mayen", "Tailândia", "Taiwan", "Tajiquistão", "Tanzânia", "Território Britânico do Oceano Índico", "Territórios Austrais Franceses", "Timor Leste", "Togo", "Tokelau", "Tonga", "Trindade e Tobago", "Tunísia", "Turquemenistão", "Turquia", "Tuvalu", "Ucrânia", "Uganda", "União Europeia", "Uruguai", "Usbequistão", "Vanuatu", "Vaticano", "Venezuela", "Vietname", "Wake Island", "Wallis e Futuna", "West Bank", "Zâmbia", "Zimbabué" }));
        comboBoxPais.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                comboBoxPaisFocusLost(evt);
            }
        });

        jLabel126.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel126.setText("Ano *");

        try {
            campoAno.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoAno.setToolTipText("");
        campoAno.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        campoAno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoAnoFocusLost(evt);
            }
        });

        jLabel127.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel127.setText("Renavam *");

        try {
            campoRenavam.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###########-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoRenavam.setToolTipText("");
        campoRenavam.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel128.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel128.setText("Nº Eixos *");

        camponEixos.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        camponEixos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                camponEixosFocusLost(evt);
            }
        });

        jLabel154.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel154.setText("Nº do Chassi *");

        jLabel155.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel155.setText("Nº do Motor");

        jLabel156.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel156.setText("Cor *");

        campoCor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        campoCor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoCorFocusLost(evt);
            }
        });

        jLabelPlaca.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabelPlaca.setForeground(new java.awt.Color(204, 0, 0));
        jLabelPlaca.setText("Campo Vazio");

        jLabelRenavam.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabelRenavam.setForeground(new java.awt.Color(204, 0, 0));
        jLabelRenavam.setText("Campo Vazio");

        jLabelChassi.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabelChassi.setForeground(new java.awt.Color(204, 0, 0));
        jLabelChassi.setText("Campo Vazio");

        jLabelNMotor.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabelNMotor.setForeground(new java.awt.Color(204, 0, 0));
        jLabelNMotor.setText("Campo Vazio");

        jLabel134.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel134.setText("* Campos Obrigatórios");

        try {
            campoChassi.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("AAAAAAAAAAAAAAAAA")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoChassi.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        try {
            campoNMotor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("AAAAAAAAAAAAAAAAAA")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoNMotor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel134, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel154, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(campoChassi)
                            .addComponent(jLabelChassi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel155, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(12, 12, 12))
                            .addComponent(campoNMotor)
                            .addComponent(jLabelNMotor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoCor)
                            .addComponent(jLabel156, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(456, 456, 456))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelPlaca, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(campoPlaca, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel122, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(5, 5, 5)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel123, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(16, 16, 16))
                            .addComponent(campoMarca))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel124, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(31, 31, 31))
                            .addComponent(campoModelo))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel125, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxPais, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel126, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(campoAno))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelRenavam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(campoRenavam)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel127, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(22, 22, 22)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(camponEixos)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel128, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(83, 83, 83))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxPais)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel122)
                            .addComponent(jLabel123)
                            .addComponent(jLabel124))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(campoPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(campoMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel125)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel127, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel128, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(camponEixos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoRenavam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel126, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelPlaca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelRenavam))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel154)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(campoChassi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(campoNMotor, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(campoCor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(6, 6, 6)
                                .addComponent(jLabelChassi)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel134))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel155)
                                    .addComponent(jLabel156))
                                .addGap(96, 96, 96)))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jLabelNMotor)
                        .addGap(68, 68, 68))))
        );

        campoPlaca.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                try {
                    avisaPlacaVeiculo(campoPlaca, jLabelPlaca);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CriarVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(CriarVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            public void removeUpdate(DocumentEvent e) {
                try {
                    avisaPlacaVeiculo(campoPlaca, jLabelPlaca);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CriarVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(CriarVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            public void insertUpdate(DocumentEvent e) {
                try {
                    avisaPlacaVeiculo(campoPlaca, jLabelPlaca);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CriarVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(CriarVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        campoRenavam.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                try {
                    avisaRenavamVeiculo(campoRenavam, jLabelRenavam);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CriarVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(CriarVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            public void removeUpdate(DocumentEvent e) {
                try {
                    avisaRenavamVeiculo(campoRenavam, jLabelRenavam);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CriarVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(CriarVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            public void insertUpdate(DocumentEvent e) {
                try {
                    avisaRenavamVeiculo(campoRenavam, jLabelRenavam);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CriarVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(CriarVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        campoChassi.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                try {
                    avisaChassiVeiculo(campoChassi, jLabelChassi);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CriarVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(CriarVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            public void removeUpdate(DocumentEvent e) {
                try {
                    avisaChassiVeiculo(campoChassi, jLabelChassi);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CriarVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(CriarVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            public void insertUpdate(DocumentEvent e) {
                try {
                    avisaChassiVeiculo(campoChassi, jLabelChassi);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CriarVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(CriarVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        campoNMotor.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                try {
                    avisaNMotor(campoNMotor, jLabelNMotor);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CriarVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(CriarVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            public void removeUpdate(DocumentEvent e) {
                try {
                    avisaNMotor(campoNMotor, jLabelNMotor);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CriarVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(CriarVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            public void insertUpdate(DocumentEvent e) {
                try {
                    avisaNMotor(campoNMotor, jLabelNMotor);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CriarVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(CriarVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel1.setText("CADASTRO DE VEÍCULO");

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/logoR.png"))); // NOI18N

        btnFecharTela1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnFecharTela1.setText("FECHAR");
        btnFecharTela1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharTela1ActionPerformed(evt);
            }
        });
        btnFecharTela1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnFecharTela1KeyPressed(evt);
            }
        });

        btnSalvar1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSalvar1.setText("SALVAR");
        btnSalvar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvar1ActionPerformed(evt);
            }
        });
        btnSalvar1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSalvar1KeyPressed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tabelaCaract.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabelaCaract.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tabelaCaract.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Característica"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaCaract.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tabelaCaract.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabelaCaract);
        if (tabelaCaract.getColumnModel().getColumnCount() > 0) {
            tabelaCaract.getColumnModel().getColumn(0).setResizable(false);
            tabelaCaract.getColumnModel().getColumn(0).setPreferredWidth(50);
            tabelaCaract.getColumnModel().getColumn(1).setResizable(false);
            tabelaCaract.getColumnModel().getColumn(1).setPreferredWidth(270);
        }

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("CARACTERÍSTICAS");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setText("CARACT.:");

        campoCaract.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btnAdicionaCaract.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btnAdicionaCaract.setText("ADICIONAR");
        btnAdicionaCaract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionaCaractActionPerformed(evt);
            }
        });
        btnAdicionaCaract.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAdicionaCaractKeyPressed(evt);
            }
        });

        btnRemoveCaract.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btnRemoveCaract.setText("REMOVER");
        btnRemoveCaract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveCaractActionPerformed(evt);
            }
        });
        btnRemoveCaract.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnRemoveCaractKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(160, 160, 160))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(campoCaract, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnRemoveCaract, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAdicionaCaract, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(campoCaract, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionaCaract))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemoveCaract)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(701, 701, 701))
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(31, 31, 31)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(btnFecharTela1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(btnSalvar1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(45, 45, 45))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSalvar1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnFecharTela1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(667, 667, 667))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFecharTela1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharTela1ActionPerformed
        fechaCadastroVeiculo();
    }//GEN-LAST:event_btnFecharTela1ActionPerformed

    private void btnFecharTela1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnFecharTela1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            fechaCadastroVeiculo();
        }
    }//GEN-LAST:event_btnFecharTela1KeyPressed

    private void btnSalvar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvar1ActionPerformed
        cadastraVeiculo();
    }//GEN-LAST:event_btnSalvar1ActionPerformed

    private void btnSalvar1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSalvar1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            cadastraVeiculo();
        }
    }//GEN-LAST:event_btnSalvar1KeyPressed

    private void comboBoxPaisFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comboBoxPaisFocusLost
        String aux = (String)comboBoxPais.getSelectedItem();
        if(aux.equals("Selecione")){
            getListaRequisitos().get(3).setIsOk(false);
        } else {
            getListaRequisitos().get(3).setIsOk(true);
        }
    }//GEN-LAST:event_comboBoxPaisFocusLost

    private void campoMarcaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoMarcaFocusLost
        if(campoMarca.getText().equals("")){
            getListaRequisitos().get(1).setIsOk(false);
        } else {
            getListaRequisitos().get(1).setIsOk(true);
        }
    }//GEN-LAST:event_campoMarcaFocusLost

    private void campoModeloFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoModeloFocusLost
        if(campoModelo.getText().equals("")){
            getListaRequisitos().get(2).setIsOk(false);
        } else {
            getListaRequisitos().get(2).setIsOk(true);
        }
    }//GEN-LAST:event_campoModeloFocusLost

    private void campoAnoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoAnoFocusLost
        if(campoAno.getText().equals("")){
            getListaRequisitos().get(4).setIsOk(false);
        } else {
            getListaRequisitos().get(4).setIsOk(true);
        }
    }//GEN-LAST:event_campoAnoFocusLost

    private void camponEixosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_camponEixosFocusLost
        if(camponEixos.getText().equals("")){
            getListaRequisitos().get(6).setIsOk(false);
        } else {
            getListaRequisitos().get(6).setIsOk(true);
        }
    }//GEN-LAST:event_camponEixosFocusLost

    private void campoCorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoCorFocusLost
        if(campoCor.getText().equals("")){
            getListaRequisitos().get(8).setIsOk(false);
        } else {
            getListaRequisitos().get(8).setIsOk(true);
        }
    }//GEN-LAST:event_campoCorFocusLost

    private void btnAdicionaCaractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionaCaractActionPerformed
        adicionaCaracteristica();
    }//GEN-LAST:event_btnAdicionaCaractActionPerformed

    private void btnAdicionaCaractKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAdicionaCaractKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            adicionaCaracteristica();
        }
    }//GEN-LAST:event_btnAdicionaCaractKeyPressed

    private void btnRemoveCaractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveCaractActionPerformed
        removeCaracteristica();
    }//GEN-LAST:event_btnRemoveCaractActionPerformed

    private void btnRemoveCaractKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnRemoveCaractKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            removeCaracteristica();
        }
    }//GEN-LAST:event_btnRemoveCaractKeyPressed

    private void adicionaCaracteristica(){
        if (campoCaract.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Digite um valor válido.");
        } else {
            DefaultTableModel modeloAux = (DefaultTableModel) tabelaCaract.getModel();
            modeloAux.addRow(new Object[]{tabelaCaract.getRowCount()+1, campoCaract.getText()});
        }
    }
    
    private void removeCaracteristica(){
        if (tabelaCaract.getSelectedRow() > -1){
            String message = "Deseja realmente remover a característica?";
            String title = "Cancelar Inserção";
            int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {
                DefaultTableModel modeloAux = (DefaultTableModel) tabelaCaract.getModel();
                modeloAux.removeRow(tabelaCaract.getSelectedRow());
            }
            if (reply == JOptionPane.NO_OPTION) {

            }
        }
    }
    
    private void avisaPlacaVeiculo(javax.swing.JFormattedTextField campoAux, javax.swing.JLabel labelAux) throws SQLException, ClassNotFoundException{
        if (campoAux.getText().equals("   -    ")) {
            labelAux.setForeground(new java.awt.Color(212, 0, 51));
            labelAux.setText("Campo Vazio.");
            getListaRequisitos().get(0).setIsOk(false);
            //listaRequisitos.get(6).setIsOk(false);
        } else {
            if (!campoAux.getText().contains(" ")){
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = SQL_URL.getUrl();
                try (Connection con = DriverManager.getConnection(url)) {
                    String sql = "SELECT Placa FROM Veiculo WHERE Placa = ?";
                    String textAux = campoAux.getText();
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.setString(1, textAux);
                    ResultSet rs = pst.executeQuery();
                    if (rs.next()) {
                        labelAux.setForeground(new java.awt.Color(212, 0, 51));
                        labelAux.setText("Placa já cadastrada.");
                        getListaRequisitos().get(0).setIsOk(false);
                    } else {
                        labelAux.setForeground(new java.awt.Color(51, 199, 9));
                        labelAux.setText("Placa válida.");
                        getListaRequisitos().get(0).setIsOk(true);
                    }
                }
            } else {
                labelAux.setForeground(new java.awt.Color(212, 0, 51));
                labelAux.setText("Valor inválido.");
                getListaRequisitos().get(0).setIsOk(false);
            }
        }
    }
    
    private void avisaRenavamVeiculo(javax.swing.JFormattedTextField campoAux, javax.swing.JLabel labelAux) throws SQLException, ClassNotFoundException{
        if (campoAux.getText().equals("          - ")) {
            labelAux.setForeground(new java.awt.Color(212, 0, 51));
            labelAux.setText("Campo Vazio.");
            listaRequisitos.get(5).setIsOk(false);
        } else {
            if (!campoAux.getText().contains(" ")){
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = SQL_URL.getUrl();
                try (Connection con = DriverManager.getConnection(url)) {
                    String sql = "SELECT Renavam FROM Veiculo WHERE Renavam = ?";
                    String textAux = campoAux.getText();
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.setString(1, textAux);
                    ResultSet rs = pst.executeQuery();
                    if (rs.next()) {
                            labelAux.setForeground(new java.awt.Color(212, 0, 51));
                            labelAux.setText("Renavam já cadastrado.");
                            listaRequisitos.get(5).setIsOk(false);
                    } else {
                        labelAux.setForeground(new java.awt.Color(51, 199, 9));
                        labelAux.setText("Renavam válido.");
                        listaRequisitos.get(5).setIsOk(true);
                    }
                }
            } else {
                labelAux.setForeground(new java.awt.Color(212, 0, 51));
                labelAux.setText("Valor inválido.");
                listaRequisitos.get(5).setIsOk(false);
            }
        }
    }
    
    private void avisaChassiVeiculo(javax.swing.JFormattedTextField campoAux, javax.swing.JLabel labelAux) throws SQLException, ClassNotFoundException{
        if (campoAux.getText().equals("                 ")) {
            labelAux.setForeground(new java.awt.Color(212, 0, 51));
            labelAux.setText("Campo Vazio.");
            listaRequisitos.get(7).setIsOk(false);
        } else {
            if (!campoAux.getText().contains(" ")){
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = SQL_URL.getUrl();
                try (Connection con = DriverManager.getConnection(url)) {
                    String sql = "SELECT NumeroChassi FROM Veiculo WHERE NumeroChassi = ?";
                    String textAux = campoAux.getText();
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.setString(1, textAux);
                    ResultSet rs = pst.executeQuery();
                    if (rs.next()) {
                            labelAux.setForeground(new java.awt.Color(212, 0, 51));
                            labelAux.setText("Chassi já cadastrado.");
                            listaRequisitos.get(7).setIsOk(false);
                    } else {
                        labelAux.setForeground(new java.awt.Color(51, 199, 9));
                        labelAux.setText("Chassi válido.");
                        listaRequisitos.get(7).setIsOk(true);
                    }
                }
            } else {
                labelAux.setForeground(new java.awt.Color(212, 0, 51));
                labelAux.setText("Valor inválido.");
                listaRequisitos.get(7).setIsOk(false);
            }
        }
    }
    
    private void avisaNMotor(javax.swing.JFormattedTextField campoAux, javax.swing.JLabel labelAux) throws SQLException, ClassNotFoundException{
        if (campoAux.getText().contains(" ")) {
            labelAux.setForeground(new java.awt.Color(212, 0, 51));
            labelAux.setText("Campo Vazio.");
            if (listaRequisitos.size() == 10){
                listaRequisitos.remove(9);
            }
        } else {
            if (!campoAux.getText().contains(" ")){
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = SQL_URL.getUrl();
                try (Connection con = DriverManager.getConnection(url)) {
                    String sql = "SELECT NroMotor FROM Veiculo WHERE NroMotor = ?";
                    String textAux = campoAux.getText();
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.setString(1, textAux);
                    ResultSet rs = pst.executeQuery();
                    if (rs.next()) {
                            labelAux.setForeground(new java.awt.Color(212, 0, 51));
                            labelAux.setText("Nº Motor já cadastrado.");
                            listaRequisitos.add(9, new Requisito ("Nª Motor",false));
                            
                            //listaRequisitos.get(8).setIsOk(false);
                    } else {
                        labelAux.setForeground(new java.awt.Color(51, 199, 9));
                        labelAux.setText("Nº Motor válido.");
                        listaRequisitos.add(9, new Requisito ("Nª Motor",true));
                        //listaRequisitos.get(8).setIsOk(true);
                    }
                }
            } else {
                labelAux.setForeground(new java.awt.Color(212, 0, 51));
                labelAux.setText("Valor inválido.");
                listaRequisitos.add(9, new Requisito ("Nª Motor",false));
                //listaRequisitos.get(8).setIsOk(false);
            }
        }
    }
    
    private void cadastraVeiculo() {
        Iterator<Requisito> iterador = listaRequisitos.iterator();
        String requisitosN = "";
        Requisito aux;
        boolean auxControl = true;
        while (iterador.hasNext()) {
            aux = iterador.next();
            if (!aux.isIsOk()) {
                requisitosN = requisitosN.concat(" " + aux.getRequisito() + ",");
                auxControl = false;
            }
        }
        if (!auxControl) {
            requisitosN = requisitosN.substring(0, requisitosN.length() - 1);
            JOptionPane.showMessageDialog(null, "Os seguintes requisitos não foram preeenchidos:" + requisitosN + ".");
        } else {
            String Placa, Modelo, Marca, Pais, Ano, Renavam, Eixos, NChassi, NMotor, Cor;
            Placa = campoPlaca.getText();
            Modelo = campoModelo.getText();
            Marca = campoMarca.getText();
            Pais = (String)comboBoxPais.getSelectedItem();
            Ano = campoAno.getText();
            Renavam = campoRenavam.getText();
            Eixos = camponEixos.getText();
            NChassi = campoChassi.getText();
            NMotor = campoNMotor.getText();
            Cor = campoCor.getText();
            
            if(tabelaCaract.getRowCount() > 0){
                int index = 0;
                while (index < tabelaCaract.getRowCount()){
                    try {
                        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                        String url = SQL_URL.getUrl();
                        try (Connection con = DriverManager.getConnection(url)) {
                            String sql;
                            sql = "INSERT INTO Veiculo_Caracteristica (PlacaVeiculo, Caracteristica) VALUES (?,?)";
                            PreparedStatement pst = con.prepareStatement(sql);
                            pst.setString(1, Placa);
                            pst.setString(2, (String)tabelaCaract.getValueAt(index, 1));
                            ResultSet rs = pst.executeQuery();
                            if (rs.next()) {

                            }
                        }
                    } catch (HeadlessException | ClassNotFoundException | SQLException e) {
                        //JOptionPane.showMessageDialog(null, e);
                    }
                    index++;
                }
            }

            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = SQL_URL.getUrl();
                try (Connection con = DriverManager.getConnection(url)) {
                    String sql = "INSERT INTO Veiculo (Placa,Marca,Modelo,Pais,Renavam,Ano,NumeroEixos,NumeroChassi,NroMotor,Cor) VALUES (?,?,?,?,?,?,?,?,?,?)";
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.setString(1, Placa);
                    pst.setString(2, Marca);
                    pst.setString(3, Modelo);
                    pst.setString(4, Pais);
                    pst.setString(5, Renavam);
                    pst.setString(6, Ano);
                    pst.setString(7, Eixos);
                    pst.setString(8, NChassi);
                    pst.setString(9, NMotor);
                    pst.setString(10, Cor);

                    ResultSet rs = pst.executeQuery();
                    
                    if(rs.next()){
                        
                    }
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Veículo de placa '" + Placa + "' criado com sucesso.");
                veiculoController.fechaCriacaoVeiculo();
            } catch (HeadlessException | ClassNotFoundException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }
    
    private void fechaCadastroVeiculo() {
        String message = "Deseja realmente cancelar a criação?";
        String title = "Cancelar Criação";
        int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            veiculoController.fechaCriacaoVeiculo();
        }
        if (reply == JOptionPane.NO_OPTION) {

        }
    }
    
    private void setagemInicial(){
        listaRequisitos = null;
        listaRequisitos = new ArrayList();
        listaRequisitos.add(new Requisito("Placa", false));
        listaRequisitos.add(new Requisito("Marca", false));
        listaRequisitos.add(new Requisito("Modelo", false));
        listaRequisitos.add(new Requisito("Pais", false));
        listaRequisitos.add(new Requisito("Ano", false));
        listaRequisitos.add(new Requisito("Renavam", false));
        listaRequisitos.add(new Requisito("Nº Eixos", false));
        listaRequisitos.add(new Requisito("Nº do Chassi", false));
        listaRequisitos.add(new Requisito("Cor", false));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CriarVeiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

     
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionaCaract;
    private javax.swing.JButton btnFecharTela1;
    private javax.swing.JButton btnRemoveCaract;
    private javax.swing.JButton btnSalvar1;
    private javax.swing.JFormattedTextField campoAno;
    private javax.swing.JTextField campoCaract;
    private javax.swing.JFormattedTextField campoChassi;
    private javax.swing.JTextField campoCor;
    private javax.swing.JTextField campoMarca;
    private javax.swing.JTextField campoModelo;
    private javax.swing.JFormattedTextField campoNMotor;
    private javax.swing.JFormattedTextField campoPlaca;
    private javax.swing.JFormattedTextField campoRenavam;
    private javax.swing.JFormattedTextField camponEixos;
    private javax.swing.JComboBox<String> comboBoxPais;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel122;
    private javax.swing.JLabel jLabel123;
    private javax.swing.JLabel jLabel124;
    private javax.swing.JLabel jLabel125;
    private javax.swing.JLabel jLabel126;
    private javax.swing.JLabel jLabel127;
    private javax.swing.JLabel jLabel128;
    private javax.swing.JLabel jLabel134;
    private javax.swing.JLabel jLabel154;
    private javax.swing.JLabel jLabel155;
    private javax.swing.JLabel jLabel156;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabelChassi;
    private javax.swing.JLabel jLabelNMotor;
    private javax.swing.JLabel jLabelPlaca;
    private javax.swing.JLabel jLabelRenavam;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaCaract;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the listaRequisitos
     */
    public ArrayList<Requisito> getListaRequisitos() {
        return listaRequisitos;
    }

    /**
     * @param listaRequisitos the listaRequisitos to set
     */
    public void setListaRequisitos(ArrayList<Requisito> listaRequisitos) {
        this.listaRequisitos = listaRequisitos;
    }

    /**
     * @return the veiculoController
     */
    public VeiculoController getVeiculoController() {
        return veiculoController;
    }

    /**
     * @param veiculoController the veiculoController to set
     */
    public void setVeiculoController(VeiculoController veiculoController) {
        this.veiculoController = veiculoController;
    }
}
