/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.peca;

import controller.PecasController;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JFrame;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Especificacao;
import model.Peca;
import util.SQL_URL;

/**
 *
 * @author KLEYN
 */
public class PecaUI extends javax.swing.JFrame {
    
    private Peca pecaAux = null;
    private CriarPeca criarPeca= null;
    private EditarPeca editarPeca = null;
    private VisualizarPeca visualizarPeca = null;
    
    private PecasController pecaController = null;
    /**
     * Creates new form PecaUI
     * @param pecaController
     */
    public PecaUI(PecasController pecaController) {
        this.pecaController = pecaController;
        initComponents();
        this.setVisible(true);
        this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);
        this.toFront();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoBusca = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaProdutos = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        btnEditar = new javax.swing.JButton();
        btnEditar.setEnabled(false);
        btnExcluir = new javax.swing.JButton();
        btnExcluir.setEnabled(false);
        btnCriar = new javax.swing.JButton();
        btnAtualizarEstoque = new javax.swing.JButton();
        btnExcluir.setEnabled(false);
        btnVisualizarPeca = new javax.swing.JButton();
        btnExcluir.setEnabled(false);
        btnFechar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        campoBusca = new javax.swing.JTextField();
        jRadioButton_Codigo = new javax.swing.JRadioButton();
        jRadioButton_Descricao = new javax.swing.JRadioButton();
        btnBuscar = new javax.swing.JButton();
        jRadioButton_NomeVariavel = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel1.setText("Lista de Produtos");

        tabelaProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descrição", "Valor", "Quantidade em Estoque"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaProdutos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tabelaProdutos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabelaProdutos);
        if (tabelaProdutos.getColumnModel().getColumnCount() > 0) {
            tabelaProdutos.getColumnModel().getColumn(0).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(0).setPreferredWidth(100);
            tabelaProdutos.getColumnModel().getColumn(1).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(1).setPreferredWidth(250);
            tabelaProdutos.getColumnModel().getColumn(2).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(2).setPreferredWidth(100);
            tabelaProdutos.getColumnModel().getColumn(3).setResizable(false);
            tabelaProdutos.getColumnModel().getColumn(3).setPreferredWidth(150);
        }

        jPanel2.setBackground(new java.awt.Color(242, 242, 242));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.gray, java.awt.Color.gray, java.awt.Color.gray, java.awt.Color.gray));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("CONTROLES");

        btnEditar.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnEditar.setText("EDITAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        btnEditar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnEditarKeyPressed(evt);
            }
        });

        btnExcluir.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnExcluir.setText("EXCLUIR");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        btnExcluir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnExcluirKeyPressed(evt);
            }
        });

        btnCriar.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnCriar.setText("CRIAR");
        btnCriar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCriarActionPerformed(evt);
            }
        });
        btnCriar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCriarKeyPressed(evt);
            }
        });

        btnAtualizarEstoque.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnAtualizarEstoque.setLabel("ATUALIZAR ESTOQUE");
        btnAtualizarEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarEstoqueActionPerformed(evt);
            }
        });
        btnAtualizarEstoque.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAtualizarEstoqueKeyPressed(evt);
            }
        });

        btnVisualizarPeca.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnVisualizarPeca.setText("VISUALIZAR");
        btnVisualizarPeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisualizarPecaActionPerformed(evt);
            }
        });
        btnVisualizarPeca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnVisualizarPecaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(104, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCriar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAtualizarEstoque, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnVisualizarPeca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(102, 102, 102))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCriar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnVisualizarPeca)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAtualizarEstoque)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExcluir)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        btnFechar.setBackground(new java.awt.Color(145, 0, 0));
        btnFechar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnFechar.setForeground(new java.awt.Color(255, 255, 255));
        btnFechar.setText("FECHAR");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(242, 242, 242));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.gray, java.awt.Color.gray, java.awt.Color.gray, java.awt.Color.gray));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("BUSCAR POR");

        campoBusca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                campoBuscaKeyPressed(evt);
            }
        });

        grupoBusca.add(jRadioButton_Codigo);
        jRadioButton_Codigo.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jRadioButton_Codigo.setText("CODIGO");
        jRadioButton_Codigo.setActionCommand("");
        jRadioButton_Codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_CodigoActionPerformed(evt);
            }
        });

        grupoBusca.add(jRadioButton_Descricao);
        jRadioButton_Descricao.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jRadioButton_Descricao.setText("DESCRIÇÃO");
        jRadioButton_Descricao.setActionCommand("");
        jRadioButton_Descricao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_DescricaoActionPerformed(evt);
            }
        });

        btnBuscar.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnBuscar.setText("BUSCAR");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        btnBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnBuscarKeyPressed(evt);
            }
        });

        grupoBusca.add(jRadioButton_NomeVariavel);
        jRadioButton_NomeVariavel.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jRadioButton_NomeVariavel.setText("NOME VARIAVEL");
        jRadioButton_NomeVariavel.setActionCommand("");
        jRadioButton_NomeVariavel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_NomeVariavelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator6)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(campoBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jRadioButton_Descricao)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jRadioButton_Codigo)
                                .addGap(77, 77, 77)
                                .addComponent(jRadioButton_NomeVariavel)))
                        .addGap(52, 52, 52))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(campoBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton_Codigo)
                    .addComponent(jRadioButton_NomeVariavel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton_Descricao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(btnBuscar)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(269, 269, 269)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(270, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(361, 361, 361))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addComponent(btnFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(547, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        produtoAlterar();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEditarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnEditarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            produtoAlterar();
        }
    }//GEN-LAST:event_btnEditarKeyPressed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        produtoExcluir();
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnExcluirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnExcluirKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            produtoExcluir();
        }
    }//GEN-LAST:event_btnExcluirKeyPressed

    private void btnCriarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCriarActionPerformed
        getPecaController().abreCriacaoPeca();
    }//GEN-LAST:event_btnCriarActionPerformed

    private void btnCriarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCriarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.setEnabled(false);
            getPecaController().abreCriacaoPeca();
        }
    }//GEN-LAST:event_btnCriarKeyPressed

    private void btnAtualizarEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarEstoqueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAtualizarEstoqueActionPerformed

    private void btnAtualizarEstoqueKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAtualizarEstoqueKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAtualizarEstoqueKeyPressed

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        getPecaController().fechaPecaUI();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void campoBuscaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoBuscaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            produtoBuscar();
        }
    }//GEN-LAST:event_campoBuscaKeyPressed

    private void jRadioButton_CodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_CodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_CodigoActionPerformed

    private void jRadioButton_DescricaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_DescricaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_DescricaoActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        produtoBuscar();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnBuscarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            produtoBuscar();
        }
    }//GEN-LAST:event_btnBuscarKeyPressed

    private void jRadioButton_NomeVariavelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_NomeVariavelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_NomeVariavelActionPerformed

    private void btnVisualizarPecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisualizarPecaActionPerformed
        produtoVisualizar();
    }//GEN-LAST:event_btnVisualizarPecaActionPerformed

    private void btnVisualizarPecaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnVisualizarPecaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            produtoVisualizar();
        }
    }//GEN-LAST:event_btnVisualizarPecaKeyPressed

    private void produtoAlterar(){
        String codigo;
        codigo = (String) tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 0);
        Peca pecaAuxLocal;
        String Codigo = null,Descricao = null,PrecoCompra = null,PrecoVenda = null,MargemLucro = null,Marca = null,Modelo = null,Ano = null;
        ArrayList<Especificacao> listaEspecificacoes = new ArrayList();
        ArrayList<String> listaNomesVariantes = new ArrayList();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = "SELECT * FROM Produto WHERE Codigo = ?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, codigo);
                ResultSet rs = pst.executeQuery();

                if(rs.next()){
                    Codigo = rs.getString("Codigo");
                    Descricao = rs.getString("Descricao");
                    PrecoCompra = rs.getString("PrecoCompra");
                    PrecoVenda = rs.getString("PrecoVenda");
                    MargemLucro = rs.getString("MargemLucro");
                    Marca = rs.getString("Marca");
                    Modelo = rs.getString("Modelo");
                    Ano = rs.getString("Ano");
                }
            }
        } catch (SQLException | HeadlessException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = "SELECT * FROM Produto_Variante WHERE CodigoProduto = ?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, codigo);
                ResultSet rs = pst.executeQuery();
                String nomeVariavel;
                while(rs.next()){
                    nomeVariavel = rs.getString("NomeVariavel");
                    listaNomesVariantes.add(nomeVariavel);
                }
            }
        } catch (SQLException | HeadlessException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = "SELECT * FROM Produto_Especificacao WHERE CodigoProduto = ?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, codigo);
                ResultSet rs = pst.executeQuery();
                String descricao, valor, unidadeMedida;
                while(rs.next()){
                    descricao = rs.getString("Descricao");
                    valor = rs.getString("Valor");
                    unidadeMedida = rs.getString("UnidadeMedida");
                    Especificacao esp = new Especificacao(descricao, valor, unidadeMedida);
                    listaEspecificacoes.add(esp);
                }
            }
        } catch (SQLException | HeadlessException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        pecaAuxLocal = new Peca(Codigo,Descricao,PrecoCompra,PrecoVenda,MargemLucro,Marca,Modelo,Ano, listaEspecificacoes, listaNomesVariantes);
        setPecaAux(pecaAuxLocal);
        pecaController.abreEdicaoPeca();
    }
    
    private void produtoVisualizar(){
        String codigo;
        codigo = (String) tabelaProdutos.getValueAt(tabelaProdutos.getSelectedRow(), 0);
        Peca pecaAuxLocal;
        String Codigo = null,Descricao = null,PrecoCompra = null,PrecoVenda = null,MargemLucro = null,Marca = null,Modelo = null,Ano = null;
        ArrayList<Especificacao> listaEspecificacoes = new ArrayList();
        ArrayList<String> listaNomesVariantes = new ArrayList();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = "SELECT * FROM Produto WHERE Codigo = ?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, codigo);
                ResultSet rs = pst.executeQuery();

                if(rs.next()){
                    Codigo = rs.getString("Codigo");
                    Descricao = rs.getString("Descricao");
                    PrecoCompra = rs.getString("PrecoCompra");
                    PrecoVenda = rs.getString("PrecoVenda");
                    MargemLucro = rs.getString("MargemLucro");
                    Marca = rs.getString("Marca");
                    Modelo = rs.getString("Modelo");
                    Ano = rs.getString("Ano");
                }
            }
        } catch (SQLException | HeadlessException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = "SELECT * FROM Produto_Variante WHERE CodigoProduto = ?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, codigo);
                ResultSet rs = pst.executeQuery();
                String nomeVariavel;
                while(rs.next()){
                    nomeVariavel = rs.getString("NomeVariavel");
                    listaNomesVariantes.add(nomeVariavel);
                }
            }
        } catch (SQLException | HeadlessException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = "SELECT * FROM Produto_Especificacao WHERE CodigoProduto = ?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, codigo);
                ResultSet rs = pst.executeQuery();
                String descricao, valor, unidadeMedida;
                while(rs.next()){
                    descricao = rs.getString("Descricao");
                    valor = rs.getString("Valor");
                    unidadeMedida = rs.getString("UnidadeMedida");
                    Especificacao esp = new Especificacao(descricao, valor, unidadeMedida);
                    listaEspecificacoes.add(esp);
                }
            }
        } catch (SQLException | HeadlessException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        pecaAuxLocal = new Peca(Codigo,Descricao,PrecoCompra,PrecoVenda,MargemLucro,Marca,Modelo,Ano, listaEspecificacoes, listaNomesVariantes);
        setPecaAux(pecaAuxLocal);
        pecaController.abreVisualizacaoPeca();
    }
    
    private void produtoExcluir(){
        int linhaSelecionada = tabelaProdutos.getSelectedRow();
        int colunaSelecionada = 0;
        String message = "Deseja realmente excluir o motorista '" + ((String)tabelaProdutos.getValueAt(linhaSelecionada, 1)) + "'?";
        String title = "Confirmação de Exclusao";
        int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = SQL_URL.getUrl();
                try (Connection con = DriverManager.getConnection(url)) {
                    String sql = "DELETE FROM Produto WHERE Codigo = ?";
                    PreparedStatement pst = con.prepareStatement(sql);
                    colunaSelecionada = 2;
                    pst.setString(1, (String) tabelaProdutos.getValueAt(linhaSelecionada, colunaSelecionada));
                    ResultSet rs = pst.executeQuery();

                }
            } catch (HeadlessException | ClassNotFoundException e) {
                JOptionPane.showMessageDialog(null, e);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "O produto '" + (String) tabelaProdutos.getValueAt(linhaSelecionada, 1) + "' foi excluído.");
                setagemInicial();
                produtoBuscaTodos();
            }
        }
        if (reply == JOptionPane.NO_OPTION) {

        }
    }
    
    private void produtoBuscar(){
        if (jRadioButton_Codigo.isSelected() || jRadioButton_Descricao.isSelected()){
            limpaTabelaProdutos();
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = SQL_URL.getUrl();
                try (Connection con = DriverManager.getConnection(url)) {
                    String sql = null;
                    String palavraBusca = campoBusca.getText();
                    if (palavraBusca.equals("")) {
                        produtoBuscaTodos();
                    } else {
                        if (jRadioButton_Codigo.isSelected()) {
                            sql = "SELECT Codigo, Descricao, PrecoVenda, QtdEstoque FROM Produto WHERE Codigo LIKE '%"+palavraBusca+"%'";
                        } else if (jRadioButton_Descricao.isSelected()) {
                            sql = "SELECT Codigo, Descricao, PrecoVenda, QtdEstoque FROM Produto WHERE Descricao LIKE '%"+palavraBusca+"%'";
                        }
                        PreparedStatement pst = con.prepareStatement(sql);;
                        ResultSet rs = pst.executeQuery();
                        while (rs.next()) {
                            DefaultTableModel modeloAux = (DefaultTableModel) tabelaProdutos.getModel();
                            modeloAux.addRow(new Object[]{rs.getString("Codigo"), rs.getString("Descricao"), rs.getString("ValorVenda"), rs.getString("QtdEstoque")});
                        }
                    }
                    
                    if (tabelaProdutos.getRowCount() == 0) {
                        JOptionPane.showMessageDialog(null, "A pesquisa não encontrou nenhum produto.");
                    }
                }
            } catch (HeadlessException | ClassNotFoundException | SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        } else if(jRadioButton_NomeVariavel.isSelected()){
            String palavraBusca = campoBusca.getText();
            buscaNomeVariavel(palavraBusca);
        }else {
            JOptionPane.showMessageDialog(null, "Selecione um filtro de busca.");
        }
    }
    
    private void buscaNomeVariavel(String palavraBusca){
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = null;
                sql = "SELECT Codigo, Descricao, PrecoVenda, QtdEstoque FROM Produto WHERE Descricao LIKE '%"+palavraBusca+"%'";
                PreparedStatement pst = con.prepareStatement(sql);
                ResultSet rs = pst.executeQuery();
                while (rs.next()) {
                    DefaultTableModel modeloAux = (DefaultTableModel) tabelaProdutos.getModel();
                    modeloAux.addRow(new Object[]{rs.getString("Codigo"), rs.getString("Descricao"), rs.getString("ValorVenda"), rs.getString("QtdEstoque")});
                }
                if (tabelaProdutos.getRowCount() == 0) {
                    JOptionPane.showMessageDialog(null, "A pesquisa não encontrou nenhum produto.");
                }
            }
        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            //JOptionPane.showMessageDialog(null, e);
        }
    }
    
    public void produtoBuscaTodos(){
        limpaTabelaProdutos();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = null;
                sql = "SELECT * FROM Produto";
                PreparedStatement pst = con.prepareStatement(sql);
                ResultSet rs = pst.executeQuery();
                while (rs.next()) {
                    DefaultTableModel modeloAux = (DefaultTableModel) tabelaProdutos.getModel();
                    modeloAux.addRow(new Object[]{rs.getString("Codigo"), rs.getString("Descricao"), rs.getString("ValorVenda"), rs.getString("QtdEstoque")});
                }
                if (tabelaProdutos.getRowCount() == 0) {
                    JOptionPane.showMessageDialog(null, "A pesquisa não encontrou nenhum produto.");
                }
            }
        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            //JOptionPane.showMessageDialog(null, e);
        }
    }
    
    public void setagemInicial(){
        btnEditar.setEnabled(true);
        btnAtualizarEstoque.setEnabled(true);
        btnExcluir.setEnabled(true);
    }
    
    private void limpaTabelaProdutos(){
        int rowCount = tabelaProdutos.getRowCount();
        if (rowCount > 0) {
            while (rowCount > 0) {
                ((DefaultTableModel) tabelaProdutos.getModel()).removeRow(rowCount - 1);
                rowCount--;
            }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PecaUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizarEstoque;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCriar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnVisualizarPeca;
    private javax.swing.JTextField campoBusca;
    private javax.swing.ButtonGroup grupoBusca;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton_Codigo;
    private javax.swing.JRadioButton jRadioButton_Descricao;
    private javax.swing.JRadioButton jRadioButton_NomeVariavel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTable tabelaProdutos;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the editarPeca
     */
    public EditarPeca getEditarPeca() {
        return editarPeca;
    }

    /**
     * @param editarPeca the editarPeca to set
     */
    public void setEditarPeca(EditarPeca editarPeca) {
        this.editarPeca = editarPeca;
    }

    /**
     * @return the pecaController
     */
    public PecasController getPecaController() {
        return pecaController;
    }

    /**
     * @param pecaController the pecaController to set
     */
    public void setPecaController(PecasController pecaController) {
        this.pecaController = pecaController;
    }

    /**
     * @return the pecaAux
     */
    public Peca getPecaAux() {
        return pecaAux;
    }

    /**
     * @param pecaAux the pecaAux to set
     */
    public void setPecaAux(Peca pecaAux) {
        this.pecaAux = pecaAux;
    }

    /**
     * @return the criarPeca
     */
    public CriarPeca getCriarPeca() {
        return criarPeca;
    }

    /**
     * @param criarPeca the criarPeca to set
     */
    public void setCriarPeca(CriarPeca criarPeca) {
        this.criarPeca = criarPeca;
    }

    /**
     * @return the visualizarPeca
     */
    public VisualizarPeca getVisualizarPeca() {
        return visualizarPeca;
    }

    /**
     * @param visualizarPeca the visualizarPeca to set
     */
    public void setVisualizarPeca(VisualizarPeca visualizarPeca) {
        this.visualizarPeca = visualizarPeca;
    }
}
