/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.peca;

import controller.PecasController;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import model.Requisito;
import util.SQL_URL;

/**
 *
 * @author KLEYN
 */
public class CriarPeca extends javax.swing.JFrame {
    
    private ArrayList<Requisito> listaRequisitos = null;
    private PecasController pecaController = null;

    /**
     * Creates new form CriarPeca
     * @param pecaController
     */
    public CriarPeca(PecasController pecaController) {
        this.listaRequisitos = new ArrayList<>();
        this.pecaController = pecaController;
        initComponents();
        this.setVisible(true);
        this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);
        this.toFront();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        campoCodigoPeca = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        campoDescricaoPeca = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        campoPrecoCompra = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        NumberFormat rateFormat = NumberFormat.getPercentInstance();
        campoPorcentagemLucro = new JFormattedTextField(rateFormat);
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        campoMarcaPeca = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        campoModeloPeca = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        campoAnoPeca = new javax.swing.JFormattedTextField();
        campoPrecoVenda = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        labelDescricao = new javax.swing.JLabel();
        labelCodigo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaNomeVariantes = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        campoNomeVar = new javax.swing.JTextField();
        btnAdicionaNomeVar = new javax.swing.JButton();
        labelNomeVariante = new javax.swing.JLabel();
        btnRemoveNomeVar = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaEspGerais = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        campoDescricaoEsp = new javax.swing.JTextField();
        btnAdcionaEsp = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jComboBoxUM = new javax.swing.JComboBox<>();
        btnRemoveEspecificacoes = new javax.swing.JButton();
        campoValorEsp = new javax.swing.JFormattedTextField();
        jLabel17 = new javax.swing.JLabel();
        btnFecharTela1 = new javax.swing.JButton();
        btnSalvar1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1536, 826));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        campoCodigoPeca.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Código *");

        campoDescricaoPeca.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Descrição *");

        campoPrecoCompra.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        campoPrecoCompra.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        campoPrecoCompra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoPrecoCompraFocusLost(evt);
            }
        });
        campoPrecoCompra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoPrecoCompraKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Preço de Compra(em R$) *");

        campoPorcentagemLucro.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        campoPorcentagemLucro.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        campoPorcentagemLucro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoPorcentagemLucroFocusLost(evt);
            }
        });
        campoPorcentagemLucro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoPorcentagemLucroKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Porcentagem de Lucro(em %) *");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Marca");

        campoMarcaPeca.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Modelo");

        campoModeloPeca.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Ano");

        try {
            campoAnoPeca.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoAnoPeca.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        campoPrecoVenda.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        campoPrecoVenda.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        campoPrecoVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoPrecoVendaFocusLost(evt);
            }
        });
        campoPrecoVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoPrecoVendaKeyReleased(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Preço de Venda (em R$)*");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel10.setText("INFORMAÇÕES GERAIS");

        labelDescricao.setText("jLabel17");

        labelCodigo.setText("jLabel17");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campoCodigoPeca)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                            .addComponent(labelCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(labelDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoDescricaoPeca, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(campoPrecoCompra))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campoPorcentagemLucro, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(572, 572, 572))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campoPrecoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(campoMarcaPeca)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campoModeloPeca, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(campoAnoPeca)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel10))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(jLabel5))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(campoCodigoPeca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(campoPorcentagemLucro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(campoDescricaoPeca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoPrecoCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelDescricao)
                    .addComponent(labelCodigo))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoAnoPeca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoPrecoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(campoMarcaPeca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(campoModeloPeca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        campoCodigoPeca.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                try {
                    avisaCodigoPeca(campoCodigoPeca, labelCodigo);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CriarPeca.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(CriarPeca.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            public void removeUpdate(DocumentEvent e) {
                try {
                    avisaCodigoPeca(campoCodigoPeca, labelCodigo);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CriarPeca.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(CriarPeca.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            public void insertUpdate(DocumentEvent e) {
                try {
                    avisaCodigoPeca(campoCodigoPeca, labelCodigo);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CriarPeca.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(CriarPeca.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        campoDescricaoPeca.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                try {
                    avisaDescricaoPeca(campoDescricaoPeca, labelDescricao);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CriarPeca.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(CriarPeca.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            public void removeUpdate(DocumentEvent e) {
                try {
                    avisaDescricaoPeca(campoDescricaoPeca, labelDescricao);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CriarPeca.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(CriarPeca.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            public void insertUpdate(DocumentEvent e) {
                try {
                    avisaDescricaoPeca(campoDescricaoPeca, labelDescricao);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CriarPeca.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(CriarPeca.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel1.setText("CADASTRO DE PRODUTO");

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tabelaNomeVariantes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabelaNomeVariantes.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tabelaNomeVariantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Nome Variante"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaNomeVariantes.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tabelaNomeVariantes.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabelaNomeVariantes);
        if (tabelaNomeVariantes.getColumnModel().getColumnCount() > 0) {
            tabelaNomeVariantes.getColumnModel().getColumn(0).setResizable(false);
            tabelaNomeVariantes.getColumnModel().getColumn(0).setPreferredWidth(100);
            tabelaNomeVariantes.getColumnModel().getColumn(1).setResizable(false);
            tabelaNomeVariantes.getColumnModel().getColumn(1).setPreferredWidth(200);
        }

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("NOMES VARIANTES");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setText("NOME:");

        campoNomeVar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btnAdicionaNomeVar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btnAdicionaNomeVar.setText("ADICIONAR");
        btnAdicionaNomeVar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionaNomeVarActionPerformed(evt);
            }
        });
        btnAdicionaNomeVar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAdicionaNomeVarKeyPressed(evt);
            }
        });

        labelNomeVariante.setText("jLabel17");

        btnRemoveNomeVar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btnRemoveNomeVar.setText("REMOVER");
        btnRemoveNomeVar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveNomeVarActionPerformed(evt);
            }
        });
        btnRemoveNomeVar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnRemoveNomeVarKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelNomeVariante, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoNomeVar, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnRemoveNomeVar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnAdicionaNomeVar)))
                            .addComponent(jLabel11))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(campoNomeVar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionaNomeVar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelNomeVariante)
                    .addComponent(btnRemoveNomeVar))
                .addGap(29, 29, 29))
        );

        campoNomeVar.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                try {
                    avisaNomeVariante(campoNomeVar, labelNomeVariante);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CriarPeca.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(CriarPeca.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            public void removeUpdate(DocumentEvent e) {
                try {
                    avisaNomeVariante(campoNomeVar, labelNomeVariante);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CriarPeca.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(CriarPeca.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            public void insertUpdate(DocumentEvent e) {
                try {
                    avisaNomeVariante(campoNomeVar, labelNomeVariante);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CriarPeca.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(CriarPeca.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 472, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(83, 83, 83)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(83, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 380, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Nomes Variantes", jPanel6);

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tabelaEspGerais.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabelaEspGerais.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DESCRIÇÃO", "UNIDADE DE MEDIDA", "VALOR"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaEspGerais.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tabelaEspGerais.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tabelaEspGerais);
        if (tabelaEspGerais.getColumnModel().getColumnCount() > 0) {
            tabelaEspGerais.getColumnModel().getColumn(0).setPreferredWidth(150);
            tabelaEspGerais.getColumnModel().getColumn(1).setPreferredWidth(120);
            tabelaEspGerais.getColumnModel().getColumn(2).setPreferredWidth(100);
        }

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setText("ESPECIFICAÇÕES GERAIS");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel14.setText("DESCRIÇÃO:");

        campoDescricaoEsp.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btnAdcionaEsp.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btnAdcionaEsp.setText("ADICIONAR");
        btnAdcionaEsp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdcionaEspActionPerformed(evt);
            }
        });
        btnAdcionaEsp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAdcionaEspKeyPressed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel15.setText("VALOR:");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel16.setText("UNIDADE DE MEDIDA:");

        jComboBoxUM.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBoxUM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Comprimento(M)", "Massa(KG)", "Volume(L)", "Corrente Elétrica (A)" }));

        btnRemoveEspecificacoes.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btnRemoveEspecificacoes.setText("REMOVER");
        btnRemoveEspecificacoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveEspecificacoesActionPerformed(evt);
            }
        });
        btnRemoveEspecificacoes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnRemoveEspecificacoesKeyPressed(evt);
            }
        });

        campoValorEsp.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(campoDescricaoEsp))
                        .addComponent(jLabel13)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(campoValorEsp, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                            .addGap(18, 18, 18)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnRemoveEspecificacoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAdcionaEsp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxUM, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(campoDescricaoEsp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxUM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campoValorEsp, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(btnAdcionaEsp)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemoveEspecificacoes)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(66, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(0, 9, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Especificações", jPanel7);

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/logoR.png"))); // NOI18N

        btnFecharTela1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnFecharTela1.setText("FECHAR");
        btnFecharTela1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharTela1ActionPerformed(evt);
            }
        });
        btnFecharTela1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnFecharTela1KeyPressed(evt);
            }
        });

        btnSalvar1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSalvar1.setText("SALVAR");
        btnSalvar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvar1ActionPerformed(evt);
            }
        });
        btnSalvar1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSalvar1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(103, 103, 103)
                                .addComponent(btnFecharTela1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(btnSalvar1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(527, 527, 527))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 939, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(517, 517, 517))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSalvar1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnFecharTela1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(116, Short.MAX_VALUE))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Nomes Variantes");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(870, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void campoPrecoCompraFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoPrecoCompraFocusLost
        if (campoPrecoCompra.getText().equals("")) {
            getListaRequisitos().get(2).setIsOk(false);
        } else {
            getListaRequisitos().get(2).setIsOk(true);
        }
    }//GEN-LAST:event_campoPrecoCompraFocusLost

    private void campoPorcentagemLucroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoPorcentagemLucroFocusLost
        if (campoPorcentagemLucro.getText().equals("")) {
            getListaRequisitos().get(3).setIsOk(false);
        } else {
            getListaRequisitos().get(3).setIsOk(true);
        }
    }//GEN-LAST:event_campoPorcentagemLucroFocusLost

    private void campoPrecoVendaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoPrecoVendaFocusLost
        if (campoPrecoVenda.getText().equals("")) {
            getListaRequisitos().get(4).setIsOk(false);
        } else {
            getListaRequisitos().get(4).setIsOk(true);
        }
    }//GEN-LAST:event_campoPrecoVendaFocusLost

    private void campoPrecoCompraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoPrecoCompraKeyReleased
        if(!campoPrecoCompra.getText().equals("") && !campoPorcentagemLucro.getText().equals("")){
            String auxTemp = campoPrecoCompra.getText().replaceAll("\\.","");
            auxTemp = auxTemp.replaceAll(",",".");
            String auxTemp2 = campoPorcentagemLucro.getText().replaceAll("\\.","");
            auxTemp2 = auxTemp2.replaceAll(",",".");
            double resultado, precoCompra, porcentagem;
            precoCompra = Double.parseDouble(auxTemp);
            porcentagem = Double.parseDouble(auxTemp2);
            resultado = precoCompra * (1+(porcentagem/100));
            BigDecimal bd = new BigDecimal(resultado).setScale(3, RoundingMode.HALF_UP);
            String resultadoS = bd.doubleValue()+"";
            resultadoS = resultadoS.replaceAll("\\.",",");
            campoPrecoVenda.setText(resultadoS);
            getListaRequisitos().get(4).setIsOk(true);
        } else if (!campoPrecoCompra.getText().equals("") && !campoPrecoVenda.getText().equals("")){
            String auxTemp = campoPrecoCompra.getText().replaceAll("\\.","");
            auxTemp = auxTemp.replaceAll(",",".");
            String auxTemp2 = campoPrecoVenda.getText().replaceAll("\\.","");
            auxTemp2 = auxTemp2.replaceAll(",",".");
            double resultado, precoCompra, precoVenda;
            precoCompra = Double.parseDouble(auxTemp);
            precoVenda = Double.parseDouble(auxTemp2);
            resultado = precoVenda - precoCompra;
            resultado = resultado / precoCompra;
            BigDecimal bd = new BigDecimal(resultado).setScale(3, RoundingMode.HALF_UP);
            String resultadoS = bd.doubleValue()+"";
            resultadoS = resultadoS.replaceAll("\\.",",");
            campoPorcentagemLucro.setText(resultadoS);
            getListaRequisitos().get(3).setIsOk(true);
        }
    }//GEN-LAST:event_campoPrecoCompraKeyReleased

    private void campoPorcentagemLucroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoPorcentagemLucroKeyReleased
        if(!campoPorcentagemLucro.getText().equals("") && !campoPrecoCompra.getText().equals("")){
            String auxTemp = campoPorcentagemLucro.getText().replaceAll("\\.","");
            auxTemp = auxTemp.replaceAll(",",".");
            String auxTemp2 = campoPrecoCompra.getText().replaceAll("\\.","");
            auxTemp2 = auxTemp2.replaceAll(",",".");
            double resultado, precoCompra, porcentagem;
            precoCompra = Double.parseDouble(auxTemp2);
            porcentagem = Double.parseDouble(auxTemp);
            resultado = precoCompra * (1+(porcentagem/100));
            BigDecimal bd = new BigDecimal(resultado).setScale(3, RoundingMode.HALF_UP);
            String resultadoS = bd.doubleValue()+"";
            resultadoS = resultadoS.replaceAll("\\.",",");
            campoPrecoVenda.setText(resultadoS);
            getListaRequisitos().get(4).setIsOk(true);
        } else if (!campoPorcentagemLucro.getText().equals("") && !campoPrecoVenda.getText().equals("")){
            String auxTemp = campoPorcentagemLucro.getText().replaceAll("\\.","");
            auxTemp = auxTemp.replaceAll(",",".");
            String auxTemp2 = campoPrecoVenda.getText().replaceAll("\\.","");
            auxTemp2 = auxTemp2.replaceAll(",",".");
            double resultado, porcentagem, precoVenda;
            porcentagem = Double.parseDouble(auxTemp);
            precoVenda = Double.parseDouble(auxTemp2);
            resultado = precoVenda / (1+(porcentagem/100));
            BigDecimal bd = new BigDecimal(resultado).setScale(3, RoundingMode.HALF_UP);
            String resultadoS = bd.doubleValue()+"";
            resultadoS = resultadoS.replaceAll("\\.",",");
            campoPrecoCompra.setText(resultadoS);
            getListaRequisitos().get(2).setIsOk(true);
        }
    }//GEN-LAST:event_campoPorcentagemLucroKeyReleased

    private void campoPrecoVendaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoPrecoVendaKeyReleased
        if (!campoPrecoCompra.getText().equals("") && !campoPrecoVenda.getText().equals("")){
            String auxTemp = campoPrecoCompra.getText().replaceAll("\\.","");
            auxTemp = auxTemp.replaceAll(",",".");
            String auxTemp2 = campoPrecoVenda.getText().replaceAll("\\.","");
            auxTemp2 = auxTemp2.replaceAll(",",".");
            double resultado, precoCompra, precoVenda;
            precoCompra = Double.parseDouble(auxTemp);
            precoVenda = Double.parseDouble(auxTemp2);
            resultado = precoVenda - precoCompra;
            resultado = resultado / precoCompra;
            BigDecimal bd = new BigDecimal(resultado).setScale(3, RoundingMode.HALF_UP);
            String resultadoS = bd.doubleValue()+"";
            resultadoS = resultadoS.replaceAll("\\.",",");
            campoPorcentagemLucro.setText(resultadoS);
            getListaRequisitos().get(3).setIsOk(true);
        } else if (!campoPorcentagemLucro.getText().equals("") && !campoPrecoVenda.getText().equals("")){
            String auxTemp = campoPorcentagemLucro.getText().replaceAll("\\.","");
            auxTemp = auxTemp.replaceAll(",",".");
            String auxTemp2 = campoPrecoVenda.getText().replaceAll("\\.","");
            auxTemp2 = auxTemp2.replaceAll(",",".");
            double resultado, porcentagem, precoVenda;
            porcentagem = Double.parseDouble(auxTemp);
            precoVenda = Double.parseDouble(auxTemp2);
            resultado = precoVenda / (1+(porcentagem/100));
            BigDecimal bd = new BigDecimal(resultado).setScale(3, RoundingMode.HALF_UP);
            String resultadoS = bd.doubleValue()+"";
            resultadoS = resultadoS.replaceAll("\\.",",");
            campoPrecoCompra.setText(resultadoS);
            getListaRequisitos().get(2).setIsOk(true);
        }
    }//GEN-LAST:event_campoPrecoVendaKeyReleased

    private void btnAdicionaNomeVarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionaNomeVarActionPerformed
        adicionaNomeVariante();
    }//GEN-LAST:event_btnAdicionaNomeVarActionPerformed

    private void btnAdicionaNomeVarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAdicionaNomeVarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            adicionaNomeVariante();
        }
    }//GEN-LAST:event_btnAdicionaNomeVarKeyPressed

    private void btnRemoveNomeVarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveNomeVarActionPerformed
        removeNomeVariante();
    }//GEN-LAST:event_btnRemoveNomeVarActionPerformed

    private void btnRemoveNomeVarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnRemoveNomeVarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            removeNomeVariante();
        }
    }//GEN-LAST:event_btnRemoveNomeVarKeyPressed

    private void btnAdcionaEspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdcionaEspActionPerformed
        adicionaEspecificacao();
    }//GEN-LAST:event_btnAdcionaEspActionPerformed

    private void btnAdcionaEspKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAdcionaEspKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            adicionaEspecificacao();
        }
    }//GEN-LAST:event_btnAdcionaEspKeyPressed

    private void btnRemoveEspecificacoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveEspecificacoesActionPerformed
        removeEspecificacao();
    }//GEN-LAST:event_btnRemoveEspecificacoesActionPerformed

    private void btnRemoveEspecificacoesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnRemoveEspecificacoesKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            removeEspecificacao();
        }
    }//GEN-LAST:event_btnRemoveEspecificacoesKeyPressed

    private void btnFecharTela1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharTela1ActionPerformed
        fechaCadastroPeca();
    }//GEN-LAST:event_btnFecharTela1ActionPerformed

    private void btnFecharTela1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnFecharTela1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            fechaCadastroPeca();
        }
    }//GEN-LAST:event_btnFecharTela1KeyPressed

    private void btnSalvar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvar1ActionPerformed
        cadastraPeca();
    }//GEN-LAST:event_btnSalvar1ActionPerformed

    private void btnSalvar1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSalvar1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            cadastraPeca();
        }
    }//GEN-LAST:event_btnSalvar1KeyPressed

    public void setagemInicial(){
        listaRequisitos = null;
        listaRequisitos = new ArrayList();
        
        listaRequisitos.add(new Requisito("Codigo", false));
        listaRequisitos.add(new Requisito("Descrição", false));
        listaRequisitos.add(new Requisito("Preço de Compra", false));
        listaRequisitos.add(new Requisito("Porcentagem de Lucro", false));
        listaRequisitos.add(new Requisito("Preço de Venda", false));
        
        labelCodigo.setVisible(false);
        labelDescricao.setVisible(false);
        labelNomeVariante.setVisible(false);
        
    }
    
    private void avisaCodigoPeca(javax.swing.JTextField campoCodigoAux, javax.swing.JLabel labelCodigoAux) throws ClassNotFoundException, SQLException{
        if (campoCodigoAux.getText().equals("")) {
            labelCodigoAux.setForeground(new java.awt.Color(212, 0, 51));
            labelCodigoAux.setText("Campo Vazio.");
        } else {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = "SELECT Codigo FROM Produto WHERE Codigo = ?";
                String textAux = campoCodigoAux.getText();
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, textAux);
                ResultSet rs = pst.executeQuery();
                if (rs.next()) { 
                    labelCodigoAux.setVisible(true);
                    labelCodigoAux.setForeground(new java.awt.Color(212, 0, 51));
                    labelCodigoAux.setText("Código já existente.");
                    listaRequisitos.get(0).setIsOk(false);
                } else {
                    labelCodigoAux.setVisible(true);
                    labelCodigoAux.setForeground(new java.awt.Color(51, 199, 9));
                    labelCodigoAux.setText("Código válido.");
                    listaRequisitos.get(0).setIsOk(true);
                }
            }
        }
    }
    
    private void avisaDescricaoPeca(javax.swing.JTextField campoAux, javax.swing.JLabel labelAux) throws ClassNotFoundException, SQLException{
        if (campoAux.getText().equals("")) {
            labelAux.setForeground(new java.awt.Color(212, 0, 51));
            labelAux.setText("Campo Vazio.");
        } else {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = "SELECT Descricao FROM Produto WHERE Descricao = ?";
                String textAux = campoAux.getText();
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, textAux);
                ResultSet rs = pst.executeQuery();
                if (rs.next()) { 
                    labelAux.setVisible(true);
                    labelAux.setForeground(new java.awt.Color(212, 0, 51));
                    labelAux.setText("Descrição já existente.");
                    listaRequisitos.get(1).setIsOk(false);
                } else {
                    labelAux.setVisible(true);
                    labelAux.setForeground(new java.awt.Color(51, 199, 9));
                    labelAux.setText("Descrição válida.");
                    listaRequisitos.get(1).setIsOk(true);
                }
            }
        }
    }
    
    private void avisaNomeVariante(javax.swing.JTextField campoAux, javax.swing.JLabel labelAux) throws SQLException, ClassNotFoundException{
        if (campoAux.getText().equals("")) {
            labelAux.setForeground(new java.awt.Color(212, 0, 51));
            labelAux.setText("Campo Vazio.");
        } else {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = SQL_URL.getUrl();
            try (Connection con = DriverManager.getConnection(url)) {
                String sql = "SELECT NomeVariavel FROM Produto_Variante WHERE NomeVariavel = ?";
                String textAux = campoAux.getText();
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, textAux);
                ResultSet rs = pst.executeQuery();
                if (rs.next()) { 
                    labelAux.setVisible(true);
                    labelAux.setForeground(new java.awt.Color(212, 0, 51));
                    labelAux.setText("Nome Variante já existente.");
                } else {
                    labelAux.setVisible(true);
                    labelAux.setForeground(new java.awt.Color(51, 199, 9));
                    labelAux.setText("Nome Variante válida.");
                }
            }
        }
    }
    
    private void adicionaNomeVariante(){
        if (campoNomeVar.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Digite um valor válido.");
        } else {
            if (labelNomeVariante.getText().equals("Nome Variante válida.")){
                DefaultTableModel modeloAux = (DefaultTableModel) tabelaNomeVariantes.getModel();
                modeloAux.addRow(new Object[]{tabelaNomeVariantes.getRowCount()+1, campoNomeVar.getText()});
            }
        }
    }
    
    private void removeNomeVariante(){
        if (tabelaNomeVariantes.getSelectedRow() > -1){
            String message = "Deseja realmente remover o nome inserido?";
            String title = "Cancelar Inserção";
            int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {
                DefaultTableModel modeloAux = (DefaultTableModel) tabelaNomeVariantes.getModel();
                modeloAux.removeRow(tabelaNomeVariantes.getSelectedRow());
            }
            if (reply == JOptionPane.NO_OPTION) {

            }
        }
    }
    
    private void adicionaEspecificacao(){
        String unidadeMedida = (String)jComboBoxUM.getSelectedItem();
        if (campoDescricaoEsp.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Insira um valor válido para a descrição.");
        } else if(unidadeMedida.equals("Selecione")){
            JOptionPane.showMessageDialog(null, "Selecione uma Unidade de Medida.");
        } else if (campoValorEsp.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Insira um valor válido para o valor.");
        } else {
            DefaultTableModel modeloAux = (DefaultTableModel) tabelaEspGerais.getModel();
            modeloAux.addRow(new Object[]{campoDescricaoEsp.getText(),(String)jComboBoxUM.getSelectedItem(),campoValorEsp.getText().replaceAll("\\.",",")});
        }
    }
    
    private void removeEspecificacao(){
        if (tabelaEspGerais.getSelectedRow() > -1){
            String message = "Deseja realmente remover o nome inserido?";
            String title = "Cancelar Inserção";
            int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {
                DefaultTableModel modeloAux = (DefaultTableModel) tabelaEspGerais.getModel();
                modeloAux.removeRow(tabelaEspGerais.getSelectedRow());
            }
            if (reply == JOptionPane.NO_OPTION) {

            }
        }
    }
    
    private void fechaCadastroPeca(){
        String message = "Deseja realmente cancelar o cadastro?";
        String title = "Cancelar Cadastro";
        int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            pecaController.fechaCriacaoPeca();
        }
        if (reply == JOptionPane.NO_OPTION) {

        }
    }
    
    private void cadastraPeca(){
        Iterator<Requisito> iterador = listaRequisitos.iterator();
        String requisitosN = "";
        Requisito aux;
        boolean auxControl = true;
        while (iterador.hasNext()) {
            aux = iterador.next();
            if (!aux.isIsOk()) {
                requisitosN = requisitosN.concat(" " + aux.getRequisito() + ",");
                auxControl = false;
            }
        }
        if (!auxControl) {
            requisitosN = requisitosN.substring(0, requisitosN.length() - 1);
            JOptionPane.showMessageDialog(null, "Os seguintes requisitos não foram preeenchidos:" + requisitosN + ".");
        } else {
            String codigo, descricao, valorCompra, margemLucro, precoVenda, marca, modelo, ano, qtdEstoque;
            codigo = campoCodigoPeca.getText();
            descricao = campoDescricaoPeca.getText();
            valorCompra = campoPrecoCompra.getText();
            margemLucro = campoPorcentagemLucro.getText();
            precoVenda = campoPrecoVenda.getText();
            marca = campoMarcaPeca.getText();
            modelo = campoModeloPeca.getText();
            ano = campoAnoPeca.getText();
            qtdEstoque = "0";
            
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = SQL_URL.getUrl();
                try (Connection con = DriverManager.getConnection(url)) {
                    String sql = "INSERT INTO Produto (Codigo, Descricao, PrecoCompra, MargemLucro, PrecoVenda, Marca, Modelo, Ano, QtdEstoque) VALUES (?,?,?,?,?,?,?,?,?)";
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.setString(1, codigo);
                    pst.setString(2, descricao);
                    pst.setString(3, valorCompra);
                    pst.setString(4, margemLucro);
                    pst.setString(5, precoVenda);
                    pst.setString(6, marca);
                    pst.setString(7, modelo);
                    pst.setString(8, ano);
                    pst.setString(9, qtdEstoque);

                    ResultSet rs = pst.executeQuery();
                    
                    if(rs.next()){
                        // FAZ NADA
                    }
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Produto '" + descricao + "' criado com sucesso.");
                //JOptionPane.showMessageDialog(null,e);
                pecaController.fechaCriacaoPeca();
            } catch (HeadlessException | ClassNotFoundException e) {
                JOptionPane.showMessageDialog(null, e);
            }
            
            if(tabelaNomeVariantes.getRowCount() > 0){
                int indexNome = 0;
                while (indexNome < tabelaNomeVariantes.getRowCount()){
                    try {
                        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                        String url = SQL_URL.getUrl();
                        try (Connection con = DriverManager.getConnection(url)) {
                            String sql;
                            sql = "INSERT INTO Produto_Variante (CodigoProduto, NomeVariavel) VALUES (?,?)";
                            PreparedStatement pst = con.prepareStatement(sql);
                            pst.setString(1, codigo);
                            pst.setString(2, (String)tabelaNomeVariantes.getValueAt(indexNome, 1));
                            ResultSet rs = pst.executeQuery();
                            if (rs.next()) {

                            }
                        }
                    } catch (HeadlessException | ClassNotFoundException | SQLException e) {
                        //JOptionPane.showMessageDialog(null, e);
                    }
                    indexNome++;
                }
            }
            
            if(tabelaEspGerais.getRowCount() > 0){
                int index = 0;
                while (index < tabelaEspGerais.getRowCount()){
                    try {
                        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                        String url = SQL_URL.getUrl();
                        try (Connection con = DriverManager.getConnection(url)) {
                            String sql;
                            sql = "INSERT INTO Produto_Especificacao(CodigoProduto, Descricao, Valor, UnidadeMedida) VALUES (?,?,?,?)";
                            PreparedStatement pst = con.prepareStatement(sql);
                            pst.setString(1, codigo);
                            pst.setString(2, (String)tabelaEspGerais.getValueAt(index, 0));
                            pst.setString(3, (String)tabelaEspGerais.getValueAt(index, 2));
                            pst.setString(4, (String)tabelaEspGerais.getValueAt(index, 1));
                            ResultSet rs = pst.executeQuery();
                            if (rs.next()) {

                            }
                        }
                    } catch (HeadlessException | ClassNotFoundException | SQLException e) {
                        //JOptionPane.showMessageDialog(null, e);
                        pecaController.fechaCriacaoPeca();
                    }
                    index++;
                }
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CriarPeca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdcionaEsp;
    private javax.swing.JButton btnAdicionaNomeVar;
    private javax.swing.JButton btnFecharTela1;
    private javax.swing.JButton btnRemoveEspecificacoes;
    private javax.swing.JButton btnRemoveNomeVar;
    private javax.swing.JButton btnSalvar1;
    private javax.swing.JFormattedTextField campoAnoPeca;
    private javax.swing.JTextField campoCodigoPeca;
    private javax.swing.JTextField campoDescricaoEsp;
    private javax.swing.JTextField campoDescricaoPeca;
    private javax.swing.JTextField campoMarcaPeca;
    private javax.swing.JTextField campoModeloPeca;
    private javax.swing.JTextField campoNomeVar;
    private javax.swing.JFormattedTextField campoPorcentagemLucro;
    private javax.swing.JFormattedTextField campoPrecoCompra;
    private javax.swing.JFormattedTextField campoPrecoVenda;
    private javax.swing.JFormattedTextField campoValorEsp;
    private javax.swing.JComboBox<String> jComboBoxUM;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel labelCodigo;
    private javax.swing.JLabel labelDescricao;
    private javax.swing.JLabel labelNomeVariante;
    private javax.swing.JTable tabelaEspGerais;
    private javax.swing.JTable tabelaNomeVariantes;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the listaRequisitos
     */
    public ArrayList<Requisito> getListaRequisitos() {
        return listaRequisitos;
    }

    /**
     * @param listaRequisitos the listaRequisitos to set
     */
    public void setListaRequisitos(ArrayList<Requisito> listaRequisitos) {
        this.listaRequisitos = listaRequisitos;
    }

    /**
     * @return the pecaController
     */
    public PecasController getPecaController() {
        return pecaController;
    }

    /**
     * @param pecaController the pecaController to set
     */
    public void setPecaController(PecasController pecaController) {
        this.pecaController = pecaController;
    }
}
